(()=>{"use strict";var n={853:(n,e,r)=>{r.d(e,{Z:()=>s});var t=r(537),a=r.n(t),i=r(645),c=r.n(i)()(a());c.push([n.id,':root {\n  --card-height: 150px;\n  --card-width: 100px;\n}\n\nhtml {\n  margin: 0;\n  padding: 0;\n  font-family: "Raleway", "Century Gothic", sans-serif;\n  /* background-image: radial-gradient(ellipse at top, darkgreen 5%, rgb(0, 29, 0)); */\n  background: radial-gradient(ellipse at 50% -110%, darkgreen 0%, rgb(0, 29, 0) 100%);\n}\n\nbody {\n  padding: 0;\n  margin: 0 auto;\n  text-align: center;\n  color: #ccbdbd;\n  overflow: hidden;\n}\n\n.board {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  height: 100vh;\n}\n\n.deckaTop {\n  display: flex;\n  flex-direction: row;\n  gap: var(--card-width);\n}\n\n.board .inner {\n  position: relative;\n  width: 800px;\n  max-width: 100%;\n  padding: 20px 0 10px 0;\n  margin: auto;\n  height: 100%;\n}\n\n.card {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: var(--card-width);\n  /* height: var(--card-height); */\n  min-height: var(--card-height);\n\n  box-sizing: border-box;\n\n  border: 1px solid black;\n  border-radius: 15px;\n\n  background-color: lightsteelblue;\n  left: 0;\n  user-select: none;\n\n  padding: 0;\n  margin: 0;\n\n  overflow: hidden;\n}\n\n.decka .card {\n  top: 20px;\n}\n\n.red {\n  color: red;\n}\n\n.black {\n  color: black;\n}\n\n.suitIcon {\n  height: 25%;\n  font-size: 2.3em;\n  text-align: left;\n  margin: 0 8px;\n  user-select: none;\n}\n\n.rotated {\n  transform: rotate(180deg);\n}\n\n.suitWeight {\n  font-size: 3.5em;\n  font-weight: 400;\n}\n\n.flipped {\n  z-index: 0;\n}\n\n.flipped::after {\n  content: "";\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  height: 100%;\n  background-color: #e5e5f7;\n  background-image: linear-gradient(135deg, black 24%, transparent 25%),\n    linear-gradient(225deg, black 25%, transparent 25%), linear-gradient(45deg, black 25%, transparent 25%),\n    linear-gradient(315deg, black 25%, #c7c7c7 25%);\n  background-position: 10px 0, 10px 0, 0 0, 0 0;\n  background-size: 10px 10px;\n  background-repeat: repeat;\n\n  z-index: 2;\n}\n\n.decka {\n  position: relative;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  align-content: center;\n\n  margin-top: 4vh;\n  margin-left: 4vw;\n\n  width: calc(var(--card-width) * 2.5);\n  height: calc(var(--card-height) * 1.2);\n\n  border: 1px solid black;\n  border-radius: 15px;\n}\n\n.deckaHolder {\n  position: relative;\n  /* display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  align-content: center; */\n  float: left;\n  width: calc(var(--card-width) * 1.4);\n  height: var(--card-height);\n}\n\n.deckaHolder .card {\n  position: absolute;\n  display: block;\n\n  margin-left: 10px;\n  top: 0;\n}\n\n.deckaHolder .card:first-child {\n  margin-left: 15px;\n  transform: rotate(10grad);\n}\n\n.deckaOpen {\n  /* position: absolute; */\n  margin-bottom: 4vh;\n}\n\n.places {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  gap: calc(var(--card-width) / 5);\n\n  margin-top: 4vh;\n  margin-right: 4vw;\n\n  width: calc(var(--card-width) * 5);\n  height: calc(var(--card-height) * 1.2);\n\n  border: 1px solid black;\n  border-radius: 15px;\n}\n\n.place {\n  width: var(--card-width);\n  height: var(--card-height);\n\n  border: 1px solid black;\n  border-radius: 15px;\n}\n\n.stacks {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  align-content: center;\n  gap: calc(var(--card-width) / 5);\n\n  margin-top: 10vh;\n\n  width: calc(var(--card-width) * 8 + 8vw);\n\n  /* height: calc(var(--card-height) * 1.2); */\n\n  /* border: 1px solid black; */\n  /* border-radius: 15px; */\n}\n\n.stack1,\n.stack2,\n.stack3,\n.stack4,\n.stack5,\n.stack6,\n.stack7 {\n  position: relative;\n  /* display: flex; */\n  /* flex-direction: column; */\n\n  width: var(--card-width);\n  height: calc(var(--card-height) / 3);\n\n  border: 1px solid black;\n  border-radius: 15px;\n  border-bottom: none;\n  border-end-end-radius: 0;\n  border-end-start-radius: 0;\n\n  /* margin-top: -100px; */\n  padding: 78px 0;\n}\n\n.stack1 .card:first-child,\n.stack2 .card:first-child,\n.stack3 .card:first-child,\n.stack4 .card:first-child,\n.stack5 .card:first-child,\n.stack6 .card:first-child,\n.stack7 .card:first-child {\n  box-shadow: none;\n}\n\n.stack1 .card,\n.stack2 .card,\n.stack3 .card,\n.stack4 .card,\n.stack5 .card,\n.stack6 .card,\n.stack7 .card {\n  margin: 0;\n  height: var(--card-height);\n  min-height: calc(var(--card-height) / 2);\n  margin-top: -100px;\n  border-top: 2px solid black;\n  border-top-left-radius: 2px solid black;\n  border-top-right-radius: 2px solid black;\n  box-shadow: 0px 0px 0 black, 0px -1px 5px black;\n}\n\n.stack1 .card:last-child,\n.stack2 .card:last-child,\n.stack3 .card:last-child,\n.stack4 .card:last-child,\n.stack5 .card:last-child,\n.stack6 .card:last-child,\n.stack7 .card:last-child {\n  height: var(--card-height);\n  min-height: var(--card-height);\n}\n\n.place {\n  position: relative;\n}\n/* .place .card:first-child {\n  position: relative;\n  margin: 0;\n} */\n\n.place .card {\n  /* margin-top: calc(var(--card-height) * -1); */\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n',"",{version:3,sources:["webpack://./main.css"],names:[],mappings:"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",sourcesContent:[':root {\r\n  --card-height: 150px;\r\n  --card-width: 100px;\r\n}\r\n\r\nhtml {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: "Raleway", "Century Gothic", sans-serif;\r\n  /* background-image: radial-gradient(ellipse at top, darkgreen 5%, rgb(0, 29, 0)); */\r\n  background: radial-gradient(ellipse at 50% -110%, darkgreen 0%, rgb(0, 29, 0) 100%);\r\n}\r\n\r\nbody {\r\n  padding: 0;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  color: #ccbdbd;\r\n  overflow: hidden;\r\n}\r\n\r\n.board {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  height: 100vh;\r\n}\r\n\r\n.deckaTop {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: var(--card-width);\r\n}\r\n\r\n.board .inner {\r\n  position: relative;\r\n  width: 800px;\r\n  max-width: 100%;\r\n  padding: 20px 0 10px 0;\r\n  margin: auto;\r\n  height: 100%;\r\n}\r\n\r\n.card {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: var(--card-width);\r\n  /* height: var(--card-height); */\r\n  min-height: var(--card-height);\r\n\r\n  box-sizing: border-box;\r\n\r\n  border: 1px solid black;\r\n  border-radius: 15px;\r\n\r\n  background-color: lightsteelblue;\r\n  left: 0;\r\n  user-select: none;\r\n\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  overflow: hidden;\r\n}\r\n\r\n.decka .card {\r\n  top: 20px;\r\n}\r\n\r\n.red {\r\n  color: red;\r\n}\r\n\r\n.black {\r\n  color: black;\r\n}\r\n\r\n.suitIcon {\r\n  height: 25%;\r\n  font-size: 2.3em;\r\n  text-align: left;\r\n  margin: 0 8px;\r\n  user-select: none;\r\n}\r\n\r\n.rotated {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n.suitWeight {\r\n  font-size: 3.5em;\r\n  font-weight: 400;\r\n}\r\n\r\n.flipped {\r\n  z-index: 0;\r\n}\r\n\r\n.flipped::after {\r\n  content: "";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #e5e5f7;\r\n  background-image: linear-gradient(135deg, black 24%, transparent 25%),\r\n    linear-gradient(225deg, black 25%, transparent 25%), linear-gradient(45deg, black 25%, transparent 25%),\r\n    linear-gradient(315deg, black 25%, #c7c7c7 25%);\r\n  background-position: 10px 0, 10px 0, 0 0, 0 0;\r\n  background-size: 10px 10px;\r\n  background-repeat: repeat;\r\n\r\n  z-index: 2;\r\n}\r\n\r\n.decka {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  align-content: center;\r\n\r\n  margin-top: 4vh;\r\n  margin-left: 4vw;\r\n\r\n  width: calc(var(--card-width) * 2.5);\r\n  height: calc(var(--card-height) * 1.2);\r\n\r\n  border: 1px solid black;\r\n  border-radius: 15px;\r\n}\r\n\r\n.deckaHolder {\r\n  position: relative;\r\n  /* display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  align-content: center; */\r\n  float: left;\r\n  width: calc(var(--card-width) * 1.4);\r\n  height: var(--card-height);\r\n}\r\n\r\n.deckaHolder .card {\r\n  position: absolute;\r\n  display: block;\r\n\r\n  margin-left: 10px;\r\n  top: 0;\r\n}\r\n\r\n.deckaHolder .card:first-child {\r\n  margin-left: 15px;\r\n  transform: rotate(10grad);\r\n}\r\n\r\n.deckaOpen {\r\n  /* position: absolute; */\r\n  margin-bottom: 4vh;\r\n}\r\n\r\n.places {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-content: center;\r\n  gap: calc(var(--card-width) / 5);\r\n\r\n  margin-top: 4vh;\r\n  margin-right: 4vw;\r\n\r\n  width: calc(var(--card-width) * 5);\r\n  height: calc(var(--card-height) * 1.2);\r\n\r\n  border: 1px solid black;\r\n  border-radius: 15px;\r\n}\r\n\r\n.place {\r\n  width: var(--card-width);\r\n  height: var(--card-height);\r\n\r\n  border: 1px solid black;\r\n  border-radius: 15px;\r\n}\r\n\r\n.stacks {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  align-content: center;\r\n  gap: calc(var(--card-width) / 5);\r\n\r\n  margin-top: 10vh;\r\n\r\n  width: calc(var(--card-width) * 8 + 8vw);\r\n\r\n  /* height: calc(var(--card-height) * 1.2); */\r\n\r\n  /* border: 1px solid black; */\r\n  /* border-radius: 15px; */\r\n}\r\n\r\n.stack1,\r\n.stack2,\r\n.stack3,\r\n.stack4,\r\n.stack5,\r\n.stack6,\r\n.stack7 {\r\n  position: relative;\r\n  /* display: flex; */\r\n  /* flex-direction: column; */\r\n\r\n  width: var(--card-width);\r\n  height: calc(var(--card-height) / 3);\r\n\r\n  border: 1px solid black;\r\n  border-radius: 15px;\r\n  border-bottom: none;\r\n  border-end-end-radius: 0;\r\n  border-end-start-radius: 0;\r\n\r\n  /* margin-top: -100px; */\r\n  padding: 78px 0;\r\n}\r\n\r\n.stack1 .card:first-child,\r\n.stack2 .card:first-child,\r\n.stack3 .card:first-child,\r\n.stack4 .card:first-child,\r\n.stack5 .card:first-child,\r\n.stack6 .card:first-child,\r\n.stack7 .card:first-child {\r\n  box-shadow: none;\r\n}\r\n\r\n.stack1 .card,\r\n.stack2 .card,\r\n.stack3 .card,\r\n.stack4 .card,\r\n.stack5 .card,\r\n.stack6 .card,\r\n.stack7 .card {\r\n  margin: 0;\r\n  height: var(--card-height);\r\n  min-height: calc(var(--card-height) / 2);\r\n  margin-top: -100px;\r\n  border-top: 2px solid black;\r\n  border-top-left-radius: 2px solid black;\r\n  border-top-right-radius: 2px solid black;\r\n  box-shadow: 0px 0px 0 black, 0px -1px 5px black;\r\n}\r\n\r\n.stack1 .card:last-child,\r\n.stack2 .card:last-child,\r\n.stack3 .card:last-child,\r\n.stack4 .card:last-child,\r\n.stack5 .card:last-child,\r\n.stack6 .card:last-child,\r\n.stack7 .card:last-child {\r\n  height: var(--card-height);\r\n  min-height: var(--card-height);\r\n}\r\n\r\n.place {\r\n  position: relative;\r\n}\r\n/* .place .card:first-child {\r\n  position: relative;\r\n  margin: 0;\r\n} */\r\n\r\n.place .card {\r\n  /* margin-top: calc(var(--card-height) * -1); */\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n'],sourceRoot:""}]);const s=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(t)for(var s=0;s<this.length;s++){var o=this[s][0];null!=o&&(c[o]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);t&&c[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},906:(n,e,r)=>{r.r(e),r.d(e,{default:()=>E});var t=r(379),a=r.n(t),i=r(795),c=r.n(i),s=r(569),o=r.n(s),d=r(565),l=r.n(d),A=r(216),p=r.n(A),h=r(655),u=r.n(h),g=r(853),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=o().bind(null,"head"),f.domAPI=c(),f.insertStyleElement=p(),a()(g.Z,f);const E=g.Z&&g.Z.locals?g.Z.locals:void 0},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},c=[],s=0;s<n.length;s++){var o=n[s],d=t.base?o[0]+t.base:o[0],l=i[d]||0,A="".concat(d," ").concat(l);i[d]=l+1;var p=r(A),h={css:o[1],media:o[2],sourceMap:o[3],supports:o[4],layer:o[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var u=a(h,t);t.byIndex=s,e.splice(s,0,{identifier:A,updater:u,references:1})}c.push(A)}return c}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var i=t(n=n||[],a=a||{});return function(n){n=n||[];for(var c=0;c<i.length;c++){var s=r(i[c]);e[s].references--}for(var o=t(n,a),d=0;d<i.length;d++){var l=r(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=o}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},655:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},349:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(n,e,r){this.isFlipped=!1,this.numb=n,this.suit=e,this.className=["card"],this.weight=this.getWeight(n),this.color=this.getColor()}render(n){var e,r;const t=n,a=document.createElement("span");a.obj=this,this.classList=a.classList,null===(e=this.classList)||void 0===e||e.add(...this.className);const i=document.createElement("span");i.innerHTML=this.getSuitIcon(),i.classList.add("suitIcon",this.color),t.appendChild(a);const c=document.createElement("span");c.innerHTML=this.getSuit(this.numb).toString(),c.classList.add("suitWeight",this.color);const s=i.cloneNode(!0);s.classList.add("rotated",this.color),a.appendChild(i),a.appendChild(c),a.appendChild(s),this.isFlipped||null===(r=this.classList)||void 0===r||r.add("flipped"),this.parent=t,this.card=a}rerender(){var n;this.card.setAttribute("style",""),null===(n=this.parent)||void 0===n||n.appendChild(this.card)}getClass(...n){[...arguments].forEach((n=>{this.className.push(n)}))}getSuit(n){return n>10||1===n?{11:"В",12:"Д",13:"K",1:"T"}[n]:n}addClass(n){var e;null===(e=this.className)||void 0===e||e.push(n)}removeClass(n){var e;void 0===this.classList&&console.warn("removing from class list before init"),null===(e=this.classList)||void 0===e||e.remove(n)}getSuitIcon(){return{d:"♦",c:"♣",h:"♥",s:"♠"}[this.suit]}getWeight(n){return"string"==typeof n?10:n}getColor(){return"d"===this.suit||"h"===this.suit?this.color="red":this.color="black"}console(){console.log("cardd")}}},592:(n,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0});const t=r(96),a=r(589);let i=[];e.default=function(n,e,r){i=[],n.onmousedown=function(n){i.length>0||(document.documentElement.style.cursor="none",n.target.className.indexOf("suitWeight")>-1||n.target.className.indexOf("suitIcon"),function(n){if(n.currentTarget.parentNode.className.indexOf("deckaHolder")>-1){let n=r.decka.pop();return r.decka.unshift(n),void e()}if([...n.target.classList].includes("card"))n.target.className.indexOf("deckaHolder")>-1&&n.target.nextElementSibling&&r.decka[r.decka.length-1];else{i.push(n.target.parentNode);let e=i[0].nextElementSibling;for(;null!==e;)i.push(e),e=e.nextElementSibling}}(n))},window.onmousemove=function(n){!function(n,e,r){if(i.length>0){let n=e-50,t=r+105;i[0].className.indexOf("deckaOpen")>-1?t=r+20:i[0].className.indexOf("place")>-1&&(t=r+2);let a=20;for(let e=0;e<i.length;e++)i[e].style.position="fixed",i[e].style.zIndex=a,i[e].style.left=n+"px",i[e].style.top=t+"px",i[e].style["margin-bottom"]="0",t+=20,a+=100}}(0,n.clientX,n.clientY)},window.onmouseup=function(n){document.documentElement.style.cursor="auto",n.pageX,n.pageY,function(n,c,s){let o=n.target.closest("div");if(i.length>0){const n=i[0].obj.parent,[c,s]=(0,t.default)(n,o,r);if(void 0===o||o.className.indexOf("board")>-1||o.className.indexOf("deckaTop")>-1||o.className.indexOf("stacks")>-1||o.className.indexOf("places")>-1||o.className.indexOf("decka")>-1||o.className.indexOf(n.className)>-1)return i.forEach((n=>{n.obj.rerender()})),void(i=[]);if(o.className.indexOf("stack")>-1){let n;if(s.length<=0&&o.className.indexOf("stack")>-1?i[0].obj.weight>=13&&(n=!0):n=(0,a.acceptedStack)(i[0].obj,s[s.length-1]),n){let n;n=c.length<=1?[c.pop()]:c.splice(c.indexOf(i[0].obj),c.length-1),s.push(...n),e()}if(!n)return i.forEach((n=>{n.obj.rerender()})),void(i=[])}if(o.className.indexOf("place")>-1){let n;if(s.length<=0?1===i[0].obj.weight&&(n=!0):n=(0,a.acceptedPlace)(i[0].obj,s[s.length-1]),n){let n;n=c.length<=1?[c.pop()]:c.splice(c.indexOf(i[0].obj),c.length-1),s.push(...n),e()}n||(i.forEach((n=>{n.obj.rerender()})),i=[])}}}(n)}}},589:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.acceptedPlace=e.acceptedStack=void 0,e.acceptedStack=function(n,e){let r,t=!1;return e.weight-n.weight==1&&(t=!0),n.color!==e.color&&(r=!0),t&&r},e.acceptedPlace=function(n,e){let r,t,a=!1;return n.weight-e.weight==1&&(a=!0),n.color===e.color&&(r=!0),n.suit===e.suit&&(t=!0),a&&r&&t}},96:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n,e,r){var t,a;let i,c;if(n.className.indexOf("place")>-1)i=r.places[n.className.split(" ")[1]];else if("decka"===n.className)i=r.decka;else{const e="stack"+n.className.split("")[5];i=r.stacks[e]}if(e.className.indexOf("place")>-1)c=r.places[e.className.split(" ")[1]];else if("decka"===e.className)c=r.decka;else if(e.className.indexOf("card")>-1||e.className.indexOf("suitIcon")>-1||e.className.indexOf("suitWeight")>-1){let n=e.closest("div");c=r.stacks[n.className]}else if(e.className.indexOf("flipped")>-1){let n=null===(a=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement)||void 0===a?void 0:a.parentElement;c=r.stacks[n.className]}else{const n="stack"+e.className.split("")[5];c=r.stacks[n]}return[i,c]}},404:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){for(let e=n.length-1;e>0;e--){const r=Math.floor(Math.random()*(e+1));[n[e],n[r]]=[n[r],n[e]]}return n}}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.nc=void 0,(()=>{const n=r(349),e=r(404),t=r(592);r(906);let a=[];const i=["h","s","c","d"];let c,s,o=!1;(()=>{const r={stacks:{stack1:[],stack2:[],stack3:[],stack4:[],stack5:[],stack6:[],stack7:[]},decka:[],places:{c:[],d:[],h:[],s:[]}};for(let e=0;e<i.length;e++)for(let r=1;r<14;r++){const t=new n.default(r,i[e],r%2!=0?"red":"black");a.push(t)}const t=(0,e.default)(a);a=t,c=r,r.decka=t;let s=0,o=2,d=1;c=r;const l=setInterval((function(){if(29===d)clearInterval(l);else{d++;const n=r.decka[r.decka.length-1];r.decka.pop(),s++,8===s&&(s=o,o++),o<9&&r.stacks["stack"+s].push(n)}}),100)})();const d=()=>{document.body.innerHTML="";const n=document.createElement("div");document.body.appendChild(n),n.className="board",n.id="gameboard";const e=document.createElement("div");e.className="deckaTop",n.appendChild(e),function(){const n=document.createElement("div");n.className="decka";const r=document.createElement("div");r.className="deckaHolder",n.appendChild(r),e.appendChild(n);const t=c.decka[c.decka.length-1];for(let n of c.decka)l(n,r);t.addClass("deckaOpen"),l(t,n),t.removeClass("flipped")}(),function(){const n=document.createElement("div");n.className="places",e.appendChild(n);for(let e in c.places){const r=document.createElement("div");r.className=`place ${e}`,n.appendChild(r),c.places[e].forEach((n=>{n.isFlipped=!0,n.removeClass("deckaOpen"),n.render(r);const e=n.parent;e.style.zIndex="11",e.style["margin-bottom"]=0}))}}(),function(){const e=document.createElement("div");e.className="stacks",n.appendChild(e);for(let n in c.stacks){const r=document.createElement("div");r.className=n,e.appendChild(r);const a=c.stacks[n];if(a.length>0&&(a.forEach((n=>{n.render(r),n.removeClass("deckaOpen")})),o)){const n=a[a.length-1];n.isFlipped=!0,n.removeClass("flipped")}o&&document.querySelectorAll(".card").forEach((n=>{(0,t.default)(n,d,c)}))}}(),!o&&c.stacks.stack7.length>=7&&(clearInterval(s),o=!0,d())};function l(n,e){n.render(e)}d(),s=setInterval((()=>d()),100)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ3RkFHSUEsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSxrdEtBK1J0QyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyx3QkFBd0IsTUFBUSxHQUFHLFNBQVcsNm1FQUE2bUUsZUFBaUIsQ0FBQyxpeExBQXV4TCxXQUFhLE1BRS8rUCxTLFVDaFNBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0E0RVgsT0F6RUFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVUsR0FDVkMsT0FBK0IsSUFBWkYsRUFBSyxHQW9CNUIsT0FuQklBLEVBQUssS0FDUEMsR0FBVyxjQUFjRSxPQUFPSCxFQUFLLEdBQUksUUFFdkNBLEVBQUssS0FDUEMsR0FBVyxVQUFVRSxPQUFPSCxFQUFLLEdBQUksT0FFbkNFLElBQ0ZELEdBQVcsU0FBU0UsT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksT0FFNUVDLEdBQVdOLEVBQXVCSyxHQUM5QkUsSUFDRkQsR0FBVyxLQUVURCxFQUFLLEtBQ1BDLEdBQVcsS0FFVEQsRUFBSyxLQUNQQyxHQUFXLEtBRU5BLENBQ1QsSUFBR0ksS0FBSyxHQUNWLEVBR0FULEVBQUtVLEVBQUksU0FBV0MsRUFBU0MsRUFBT0MsRUFBUUMsRUFBVUMsR0FDN0IsaUJBQVpKLElBQ1RBLEVBQVUsQ0FBQyxDQUFDLEtBQU1BLE9BQVNLLEtBRTdCLElBQUlDLEVBQXlCLENBQUMsRUFDOUIsR0FBSUosRUFDRixJQUFLLElBQUlLLEVBQUksRUFBR0EsRUFBSWhCLEtBQUtNLE9BQVFVLElBQUssQ0FDcEMsSUFBSXJCLEVBQUtLLEtBQUtnQixHQUFHLEdBQ1AsTUFBTnJCLElBQ0ZvQixFQUF1QnBCLElBQU0sRUFFakMsQ0FFRixJQUFLLElBQUlzQixFQUFLLEVBQUdBLEVBQUtSLEVBQVFILE9BQVFXLElBQU0sQ0FDMUMsSUFBSWYsRUFBTyxHQUFHRyxPQUFPSSxFQUFRUSxJQUN6Qk4sR0FBVUksRUFBdUJiLEVBQUssV0FHckIsSUFBVlcsU0FDYyxJQUFaWCxFQUFLLEtBR2RBLEVBQUssR0FBSyxTQUFTRyxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksTUFGL0ZBLEVBQUssR0FBS1csR0FNVkgsSUFDR1IsRUFBSyxJQUdSQSxFQUFLLEdBQUssVUFBVUcsT0FBT0gsRUFBSyxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxLQUMxREEsRUFBSyxHQUFLUSxHQUhWUixFQUFLLEdBQUtRLEdBTVZFLElBQ0dWLEVBQUssSUFHUkEsRUFBSyxHQUFLLGNBQWNHLE9BQU9ILEVBQUssR0FBSSxPQUFPRyxPQUFPSCxFQUFLLEdBQUksS0FDL0RBLEVBQUssR0FBS1UsR0FIVlYsRUFBSyxHQUFLLEdBQUdHLE9BQU9PLElBTXhCZCxFQUFLTCxLQUFLUyxHQUNaLENBQ0YsRUFDT0osQ0FDVCxDLFVDbEZBSixFQUFPRSxRQUFVLFNBQVVNLEdBQ3pCLElBQUlDLEVBQVVELEVBQUssR0FDZmdCLEVBQWFoQixFQUFLLEdBQ3RCLElBQUtnQixFQUNILE9BQU9mLEVBRVQsR0FBb0IsbUJBQVRnQixLQUFxQixDQUM5QixJQUFJQyxFQUFTRCxLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVOLE1BQ3pETyxFQUFPLCtEQUErRHBCLE9BQU9lLEdBQzdFTSxFQUFnQixPQUFPckIsT0FBT29CLEVBQU0sT0FDeEMsTUFBTyxDQUFDdEIsR0FBU0UsT0FBTyxDQUFDcUIsSUFBZ0JuQixLQUFLLEtBQ2hELENBQ0EsTUFBTyxDQUFDSixHQUFTSSxLQUFLLEtBQ3hCLEMsdUtDSklvQixFQUFVLENBQUMsRUFFZkEsRUFBUUMsa0JBQW9CLElBQzVCRCxFQUFRRSxjQUFnQixJQUVsQkYsRUFBUUcsT0FBUyxTQUFjLEtBQU0sUUFFM0NILEVBQVFJLE9BQVMsSUFDakJKLEVBQVFLLG1CQUFxQixJQUVoQixJQUFJLElBQVNMLEdBS25CLFFBQWUsS0FBVyxJQUFRTSxPQUFTLElBQVFBLFlBQVNuQixDLFVDeEJuRSxJQUFJb0IsRUFBYyxHQUNsQixTQUFTQyxFQUFxQkMsR0FFNUIsSUFEQSxJQUFJQyxHQUFVLEVBQ0w3QixFQUFJLEVBQUdBLEVBQUkwQixFQUFZNUIsT0FBUUUsSUFDdEMsR0FBSTBCLEVBQVkxQixHQUFHNEIsYUFBZUEsRUFBWSxDQUM1Q0MsRUFBUzdCLEVBQ1QsS0FDRixDQUVGLE9BQU82QixDQUNULENBQ0EsU0FBU0MsRUFBYXhDLEVBQU02QixHQUcxQixJQUZBLElBQUlZLEVBQWEsQ0FBQyxFQUNkQyxFQUFjLEdBQ1RoQyxFQUFJLEVBQUdBLEVBQUlWLEVBQUtRLE9BQVFFLElBQUssQ0FDcEMsSUFBSU4sRUFBT0osRUFBS1UsR0FDWmIsRUFBS2dDLEVBQVFjLEtBQU92QyxFQUFLLEdBQUt5QixFQUFRYyxLQUFPdkMsRUFBSyxHQUNsRHdDLEVBQVFILEVBQVc1QyxJQUFPLEVBQzFCeUMsRUFBYSxHQUFHL0IsT0FBT1YsRUFBSSxLQUFLVSxPQUFPcUMsR0FDM0NILEVBQVc1QyxHQUFNK0MsRUFBUSxFQUN6QixJQUFJQyxFQUFvQlIsRUFBcUJDLEdBQ3pDUSxFQUFNLENBQ1JDLElBQUszQyxFQUFLLEdBQ1ZRLE1BQU9SLEVBQUssR0FDWjRDLFVBQVc1QyxFQUFLLEdBQ2hCVSxTQUFVVixFQUFLLEdBQ2ZXLE1BQU9YLEVBQUssSUFFZCxJQUEyQixJQUF2QnlDLEVBQ0ZULEVBQVlTLEdBQW1CSSxhQUMvQmIsRUFBWVMsR0FBbUJLLFFBQVFKLE9BQ2xDLENBQ0wsSUFBSUksRUFBVUMsRUFBZ0JMLEVBQUtqQixHQUNuQ0EsRUFBUXVCLFFBQVUxQyxFQUNsQjBCLEVBQVlpQixPQUFPM0MsRUFBRyxFQUFHLENBQ3ZCNEIsV0FBWUEsRUFDWlksUUFBU0EsRUFDVEQsV0FBWSxHQUVoQixDQUNBUCxFQUFZL0MsS0FBSzJDLEVBQ25CLENBQ0EsT0FBT0ksQ0FDVCxDQUNBLFNBQVNTLEVBQWdCTCxFQUFLakIsR0FDNUIsSUFBSXlCLEVBQU16QixFQUFRSSxPQUFPSixHQVl6QixPQVhBeUIsRUFBSUMsT0FBT1QsR0FDRyxTQUFpQlUsR0FDN0IsR0FBSUEsRUFBUSxDQUNWLEdBQUlBLEVBQU9ULE1BQVFELEVBQUlDLEtBQU9TLEVBQU81QyxRQUFVa0MsRUFBSWxDLE9BQVM0QyxFQUFPUixZQUFjRixFQUFJRSxXQUFhUSxFQUFPMUMsV0FBYWdDLEVBQUloQyxVQUFZMEMsRUFBT3pDLFFBQVUrQixFQUFJL0IsTUFDekosT0FFRnVDLEVBQUlDLE9BQU9ULEVBQU1VLEVBQ25CLE1BQ0VGLEVBQUlHLFFBRVIsQ0FFRixDQUNBN0QsRUFBT0UsUUFBVSxTQUFVRSxFQUFNNkIsR0FHL0IsSUFBSTZCLEVBQWtCbEIsRUFEdEJ4QyxFQUFPQSxHQUFRLEdBRGY2QixFQUFVQSxHQUFXLENBQUMsR0FHdEIsT0FBTyxTQUFnQjhCLEdBQ3JCQSxFQUFVQSxHQUFXLEdBQ3JCLElBQUssSUFBSWpELEVBQUksRUFBR0EsRUFBSWdELEVBQWdCbEQsT0FBUUUsSUFBSyxDQUMvQyxJQUNJa0QsRUFBUXZCLEVBREtxQixFQUFnQmhELElBRWpDMEIsRUFBWXdCLEdBQU9YLFlBQ3JCLENBRUEsSUFEQSxJQUFJWSxFQUFxQnJCLEVBQWFtQixFQUFTOUIsR0FDdENpQyxFQUFLLEVBQUdBLEVBQUtKLEVBQWdCbEQsT0FBUXNELElBQU0sQ0FDbEQsSUFDSUMsRUFBUzFCLEVBREtxQixFQUFnQkksSUFFSyxJQUFuQzFCLEVBQVkyQixHQUFRZCxhQUN0QmIsRUFBWTJCLEdBQVFiLFVBQ3BCZCxFQUFZaUIsT0FBT1UsRUFBUSxHQUUvQixDQUNBTCxFQUFrQkcsQ0FDcEIsQ0FDRixDLFVDakZBLElBQUlHLEVBQU8sQ0FBQyxFQStCWnBFLEVBQU9FLFFBUFAsU0FBMEJrQyxFQUFRaUMsR0FDaEMsSUFBSUMsRUF0Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCRixFQUFLRSxHQUF5QixDQUN2QyxJQUFJQyxFQUFjQyxTQUFTQyxjQUFjSCxHQUd6QyxHQUFJSSxPQUFPQyxtQkFBcUJKLGFBQXVCRyxPQUFPQyxrQkFDNUQsSUFHRUosRUFBY0EsRUFBWUssZ0JBQWdCQyxJQUM1QyxDQUFFLE1BQU9DLEdBRVBQLEVBQWMsSUFDaEIsQ0FFRkgsRUFBS0UsR0FBVUMsQ0FDakIsQ0FDQSxPQUFPSCxFQUFLRSxFQUNkLENBSWVTLENBQVUzQyxHQUN2QixJQUFLa0MsRUFDSCxNQUFNLElBQUlVLE1BQU0sMkdBRWxCVixFQUFPVyxZQUFZWixFQUNyQixDLFVDdkJBckUsRUFBT0UsUUFOUCxTQUE0QitCLEdBQzFCLElBQUlpRCxFQUFVVixTQUFTVyxjQUFjLFNBR3JDLE9BRkFsRCxFQUFRRSxjQUFjK0MsRUFBU2pELEVBQVFtRCxZQUN2Q25ELEVBQVFHLE9BQU84QyxFQUFTakQsRUFBUUEsU0FDekJpRCxDQUNULEMsZ0JDQ0FsRixFQUFPRSxRQU5QLFNBQXdDbUYsR0FDdEMsSUFBSUMsRUFBbUQsS0FDbkRBLEdBQ0ZELEVBQWFFLGFBQWEsUUFBU0QsRUFFdkMsQyxVQ29EQXRGLEVBQU9FLFFBakJQLFNBQWdCK0IsR0FDZCxHQUF3QixvQkFBYnVDLFNBQ1QsTUFBTyxDQUNMYixPQUFRLFdBQW1CLEVBQzNCRSxPQUFRLFdBQW1CLEdBRy9CLElBQUl3QixFQUFlcEQsRUFBUUssbUJBQW1CTCxHQUM5QyxNQUFPLENBQ0wwQixPQUFRLFNBQWdCVCxJQWpENUIsU0FBZW1DLEVBQWNwRCxFQUFTaUIsR0FDcEMsSUFBSUMsRUFBTSxHQUNORCxFQUFJaEMsV0FDTmlDLEdBQU8sY0FBY3hDLE9BQU91QyxFQUFJaEMsU0FBVSxRQUV4Q2dDLEVBQUlsQyxRQUNObUMsR0FBTyxVQUFVeEMsT0FBT3VDLEVBQUlsQyxNQUFPLE9BRXJDLElBQUlOLE9BQWlDLElBQWR3QyxFQUFJL0IsTUFDdkJULElBQ0Z5QyxHQUFPLFNBQVN4QyxPQUFPdUMsRUFBSS9CLE1BQU1QLE9BQVMsRUFBSSxJQUFJRCxPQUFPdUMsRUFBSS9CLE9BQVMsR0FBSSxPQUU1RWdDLEdBQU9ELEVBQUlDLElBQ1B6QyxJQUNGeUMsR0FBTyxLQUVMRCxFQUFJbEMsUUFDTm1DLEdBQU8sS0FFTEQsRUFBSWhDLFdBQ05pQyxHQUFPLEtBRVQsSUFBSUMsRUFBWUYsRUFBSUUsVUFDaEJBLEdBQTZCLG9CQUFUM0IsT0FDdEIwQixHQUFPLHVEQUF1RHhDLE9BQU9jLEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVXNCLE1BQWUsUUFLdEluQixFQUFRQyxrQkFBa0JpQixFQUFLa0MsRUFBY3BELEVBQVFBLFFBQ3ZELENBb0JNdUQsQ0FBTUgsRUFBY3BELEVBQVNpQixFQUMvQixFQUNBVyxPQUFRLFlBckJaLFNBQTRCd0IsR0FFMUIsR0FBZ0MsT0FBNUJBLEVBQWFJLFdBQ2YsT0FBTyxFQUVUSixFQUFhSSxXQUFXQyxZQUFZTCxFQUN0QyxDQWdCTU0sQ0FBbUJOLEVBQ3JCLEVBRUosQyxVQzlDQXJGLEVBQU9FLFFBVlAsU0FBMkJpRCxFQUFLa0MsR0FDOUIsR0FBSUEsRUFBYU8sV0FDZlAsRUFBYU8sV0FBV0MsUUFBVTFDLE1BQzdCLENBQ0wsS0FBT2tDLEVBQWFTLFlBQ2xCVCxFQUFhSyxZQUFZTCxFQUFhUyxZQUV4Q1QsRUFBYUosWUFBWVQsU0FBU3VCLGVBQWU1QyxHQUNuRCxDQUNGLEMsK0RDcUlBLFVBekhBLE1BV0UsV0FBQTZDLENBQVlDLEVBQWFDLEVBQWNDLEdBUGhDLEtBQUFDLFdBQXFCLEVBUTFCOUYsS0FBSytGLEtBQU9KLEVBQ1ozRixLQUFLNEYsS0FBT0EsRUFDWjVGLEtBQUtnRyxVQUFZLENBQUMsUUFDbEJoRyxLQUFLaUcsT0FBU2pHLEtBQUtrRyxVQUFVUCxHQUM3QjNGLEtBQUs2RixNQUFRN0YsS0FBS21HLFVBQ3BCLENBRUEsTUFBQUMsQ0FBT3hCLEcsUUFDTCxNQUFNeUIsRUFBcUJ6QixFQUNyQjBCLEVBQStCcEMsU0FBU1csY0FBYyxRQUM1RHlCLEVBQUsxRCxJQUFNNUMsS0FDWEEsS0FBS3VHLFVBQVlELEVBQUtDLFVBQ1IsUUFBZCxFQUFBdkcsS0FBS3VHLGlCQUFTLFNBQUVDLE9BQU94RyxLQUFLZ0csV0FDNUIsTUFBTVMsRUFBMkJ2QyxTQUFTVyxjQUFjLFFBQ3hENEIsRUFBU0MsVUFBWTFHLEtBQUsyRyxjQUMxQkYsRUFBU0YsVUFBVUMsSUFBSSxXQUFZeEcsS0FBSzZGLE9BQ3hDUSxFQUFNMUIsWUFBWTJCLEdBRWxCLE1BQU1NLEVBQXdCMUMsU0FBU1csY0FBYyxRQUNyRCtCLEVBQVNGLFVBQVkxRyxLQUFLNkcsUUFBUTdHLEtBQUsrRixNQUFNaEcsV0FDN0M2RyxFQUFTTCxVQUFVQyxJQUFJLGFBQWN4RyxLQUFLNkYsT0FDMUMsTUFBTWlCLEVBQThCTCxFQUFTTSxXQUFVLEdBQ3ZERCxFQUFlUCxVQUFVQyxJQUFJLFVBQVd4RyxLQUFLNkYsT0FJN0NTLEVBQUszQixZQUFZOEIsR0FDakJILEVBQUszQixZQUFZaUMsR0FDakJOLEVBQUszQixZQUFZbUMsR0FDWjlHLEtBQUs4RixXQUNNLFFBQWQsRUFBQTlGLEtBQUt1RyxpQkFBUyxTQUFFQyxJQUFJLFdBR3RCeEcsS0FBS2dILE9BQVNYLEVBQ2RyRyxLQUFLc0csS0FBT0EsQ0FDZCxDQUVBLFFBQUFXLEcsTUFDR2pILEtBQUtzRyxLQUFxQnJCLGFBQWEsUUFBUyxJQUN0QyxRQUFYLEVBQUFqRixLQUFLZ0gsY0FBTSxTQUFFckMsWUFBWTNFLEtBQUtzRyxLQUNoQyxDQUVBLFFBQUFZLElBQVlDLEdBQ2tCLElBQUlDLFdBQ3RCQyxTQUFTQyxJQUNqQnRILEtBQUtnRyxVQUFVdkcsS0FBSzZILEVBQUcsR0FFM0IsQ0FFQSxPQUFBVCxDQUFRbEIsR0FPTixPQUFJQSxFQUFNLElBRVMsSUFBUkEsRUFSNkIsQ0FDdEMsR0FBSSxJQUNKLEdBQUksSUFDSixHQUFJLElBQ0osRUFBRyxLQUdTQSxHQUlMQSxDQUVYLENBRUEsUUFBQTRCLENBQVNKLEcsTUFDTyxRQUFkLEVBQUFuSCxLQUFLZ0csaUJBQVMsU0FBRXZHLEtBQUswSCxFQUN2QixDQUVBLFdBQUFLLENBQVlMLEcsV0FDYXJHLElBQW5CZCxLQUFLdUcsV0FDUGtCLFFBQVFDLEtBQUssd0NBR0QsUUFBZCxFQUFBMUgsS0FBS3VHLGlCQUFTLFNBQUVoRCxPQUFPNEQsRUFDekIsQ0FFQSxXQUFBUixHQU9FLE1BTjRDLENBQzFDZ0IsRUFBRyxJQUNIQyxFQUFHLElBQ0hDLEVBQUcsSUFDSEMsRUFBRyxLQUVXOUgsS0FBSzRGLEtBQ3ZCLENBRUEsU0FBQU0sQ0FBVVAsR0FFUixNQUFtQixpQkFBUkEsRUFDRixHQUVBQSxDQUVYLENBRUEsUUFBQVEsR0FDRSxNQUFrQixNQUFkbkcsS0FBSzRGLE1BQThCLE1BQWQ1RixLQUFLNEYsS0FDcEI1RixLQUFLNkYsTUFBUSxNQUViN0YsS0FBSzZGLE1BQVEsT0FFekIsQ0FFQSxPQUFBNEIsR0FDRUEsUUFBUU0sSUFBSSxRQUNkLEUsaUVDOUlGLGNBQ0EsU0FFQSxJQUFJQyxFQUFtQixHQWlLdkIsVUEvSkEsU0FBbUIxQixFQUFXMkIsRUFBdUJDLEdBQ25ERixFQUFjLEdBRWIxQixFQUFxQjZCLFlBQWMsU0FBVTNELEdBQ3hDd0QsRUFBWTFILE9BQVMsSUFHekI0RCxTQUFTa0UsZ0JBQWdCckUsTUFBTXNFLE9BQVMsT0FFckM3RCxFQUFFUixPQUF1QmdDLFVBQVVzQyxRQUFRLGVBQWlCLEdBQzVEOUQsRUFBRVIsT0FBdUJnQyxVQUFVc0MsUUFBUSxZQWtCaEQsU0FBbUI5RCxHQUdqQixHQUZnQkEsRUFBRStELGNBQThCcEQsV0FFckNhLFVBQVVzQyxRQUFRLGdCQUFrQixFQUFHLENBQ2hELElBQUlFLEVBQU9OLEVBQVlPLE1BQU1DLE1BRzdCLE9BRkFSLEVBQVlPLE1BQU1FLFFBQVFILFFBQzFCUCxHLENBTUYsR0FGdUIsSUFBS3pELEVBQUVSLE9BQXVCdUMsV0FFakNxQyxTQUFTLFFBT2pCcEUsRUFBRVIsT0FBdUJnQyxVQUFVc0MsUUFBUSxnQkFBa0IsR0FDbEU5RCxFQUFFUixPQUF1QjZFLG9CQUNmWCxFQUFZTyxNQUFNUCxFQUFZTyxNQUFNbkksT0FBUyxPQVR4QixDQUNwQzBILEVBQVl2SSxLQUFNK0UsRUFBRVIsT0FBdUJtQixZQUMzQyxJQUFJMkQsRUFBZWQsRUFBWSxHQUFHYSxtQkFDbEMsS0FBd0IsT0FBakJDLEdBQ0xkLEVBQVl2SSxLQUFLcUosR0FDakJBLEVBQWVBLEVBQWFELGtCLENBT2xDLENBdkNFRSxDQUFVdkUsR0FDWixFQUNBSixPQUFPNEUsWUFBYyxTQUFVeEUsSUF1Qy9CLFNBQWtCQSxFQUFleUUsRUFBa0JDLEdBQ2pELEdBQUlsQixFQUFZMUgsT0FBUyxFQUFHLENBQzFCLElBQUk2SSxFQUFPRixFQUFXLEdBQ2xCRyxFQUFNRixFQUFXLElBQ2pCbEIsRUFBWSxHQUFHaEMsVUFBVXNDLFFBQVEsY0FBZ0IsRUFDbkRjLEVBQU1GLEVBQVcsR0FDUmxCLEVBQVksR0FBR2hDLFVBQVVzQyxRQUFRLFVBQVksSUFDdERjLEVBQU1GLEVBQVcsR0FFbkIsSUFBSUcsRUFBUyxHQUNiLElBQUssSUFBSUMsRUFBUyxFQUFHQSxFQUFTdEIsRUFBWTFILE9BQVFnSixJQUNoRHRCLEVBQVlzQixHQUFRdkYsTUFBTXdGLFNBQVcsUUFDckN2QixFQUFZc0IsR0FBUXZGLE1BQU1zRixPQUFTQSxFQUNuQ3JCLEVBQVlzQixHQUFRdkYsTUFBTW9GLEtBQU9BLEVBQU8sS0FDeENuQixFQUFZc0IsR0FBUXZGLE1BQU1xRixJQUFNQSxFQUFNLEtBQ3RDcEIsRUFBWXNCLEdBQVF2RixNQUFNLGlCQUFtQixJQUM3Q3FGLEdBQVksR0FDWkMsR0FBa0IsRyxDQUd4QixDQXhERUcsQ0FBU2hGLEVBRlFBLEVBQUVpRixRQUNGakYsRUFBRWtGLFFBRXJCLEVBRUF0RixPQUFPdUYsVUFBWSxTQUFVbkYsR0FDM0JOLFNBQVNrRSxnQkFBZ0JyRSxNQUFNc0UsT0FBUyxPQUN2QjdELEVBQUVvRixNQUNGcEYsRUFBRXFGLE1Bb0RyQixTQUFrQnJGLEVBQWV5RSxFQUFrQkMsR0FDakQsSUFBSVksRUFBeUJ0RixFQUFFUixPQUF1QitGLFFBQVEsT0FFOUQsR0FBSS9CLEVBQVkxSCxPQUFTLEVBQUcsQ0FDMUIsTUFBTTBKLEVBQVNoQyxFQUFZLEdBQUdwRixJQUFJb0UsUUFDM0JpRCxFQUFNQyxJQUFNLGFBQVVGLEVBQVFGLEVBQVU1QixHQUUvQyxRQUNlcEgsSUFBYmdKLEdBQ0NBLEVBQXlCOUQsVUFBVXNDLFFBQVEsVUFBWSxHQUN2RHdCLEVBQXlCOUQsVUFBVXNDLFFBQVEsYUFBZSxHQUMxRHdCLEVBQXlCOUQsVUFBVXNDLFFBQVEsV0FBYSxHQUN4RHdCLEVBQXlCOUQsVUFBVXNDLFFBQVEsV0FBYSxHQUN4RHdCLEVBQXlCOUQsVUFBVXNDLFFBQVEsVUFBWSxHQUN4RHdCLEVBQVM5RCxVQUFVc0MsUUFBUTBCLEVBQU9oRSxZQUFjLEVBTWhELE9BSkFnQyxFQUFZWCxTQUFTQyxJQUNuQkEsRUFBRzFFLElBQUlxRSxVQUFVLFNBRW5CZSxFQUFjLElBSWhCLEdBQUk4QixFQUFTOUQsVUFBVXNDLFFBQVEsVUFBWSxFQUFHLENBQzVDLElBQUk2QixFQVFKLEdBUElELEVBQUc1SixRQUFVLEdBQUt3SixFQUFTOUQsVUFBVXNDLFFBQVEsVUFBWSxFQUN2RE4sRUFBWSxHQUFHcEYsSUFBSXFELFFBQVUsS0FDL0JrRSxHQUFXLEdBR2JBLEdBQVcsSUFBQUMsZUFBY3BDLEVBQVksR0FBR3BGLElBQUtzSCxFQUFHQSxFQUFHNUosT0FBUyxJQUUxRDZKLEVBQVUsQ0FDWixJQUFJRSxFQUVGQSxFQURFSixFQUFLM0osUUFBVSxFQUNULENBQUMySixFQUFLdkIsT0FFTnVCLEVBQUs5RyxPQUFPOEcsRUFBSzNCLFFBQVFOLEVBQVksR0FBR3BGLEtBQU1xSCxFQUFLM0osT0FBUyxHQUV0RTRKLEVBQUd6SyxRQUFRNEssR0FDWHBDLEcsQ0FFRixJQUFLa0MsRUFLSCxPQUpBbkMsRUFBWVgsU0FBU0MsSUFDbkJBLEVBQUcxRSxJQUFJcUUsVUFBVSxTQUVuQmUsRUFBYyxHLENBS2xCLEdBQUk4QixFQUFTOUQsVUFBVXNDLFFBQVEsVUFBWSxFQUFHLENBQzVDLElBQUk2QixFQVNKLEdBUklELEVBQUc1SixRQUFVLEVBQ21CLElBQTlCMEgsRUFBWSxHQUFHcEYsSUFBSXFELFNBQ3JCa0UsR0FBVyxHQUdiQSxHQUFXLElBQUFHLGVBQWN0QyxFQUFZLEdBQUdwRixJQUFLc0gsRUFBR0EsRUFBRzVKLE9BQVMsSUFHMUQ2SixFQUFVLENBQ1osSUFBSUUsRUFFRkEsRUFERUosRUFBSzNKLFFBQVUsRUFDVCxDQUFDMkosRUFBS3ZCLE9BRU51QixFQUFLOUcsT0FBTzhHLEVBQUszQixRQUFRTixFQUFZLEdBQUdwRixLQUFNcUgsRUFBSzNKLE9BQVMsR0FFdEU0SixFQUFHekssUUFBUTRLLEdBQ1hwQyxHLENBRUdrQyxJQUNIbkMsRUFBWVgsU0FBU0MsSUFDbkJBLEVBQUcxRSxJQUFJcUUsVUFBVSxJQUVuQmUsRUFBYyxHLEVBS3RCLENBbklFdUMsQ0FBUy9GLEVBQ1gsQ0FtSUYsQyxzR0NoS0EseUJBQThCZ0csRUFBc0JDLEdBQ2hELElBQ0k3QyxFQURBOEMsR0FBSSxFQVNSLE9BTklELEVBQU14RSxPQUFTdUUsRUFBTXZFLFFBQVcsSUFDbEN5RSxHQUFJLEdBRUZGLEVBQU0zRSxRQUFVNEUsRUFBTTVFLFFBQ3hCK0IsR0FBSSxHQUVDOEMsR0FBSzlDLENBQ2QsRUFFRCx5QkFBK0I0QyxFQUFzQkMsR0FDbEQsSUFDSTdDLEVBQUdFLEVBREg0QyxHQUFJLEVBYVIsT0FWSUYsRUFBTXZFLE9BQVN3RSxFQUFNeEUsUUFBVyxJQUNsQ3lFLEdBQUksR0FFRkYsRUFBTTNFLFFBQVU0RSxFQUFNNUUsUUFDeEIrQixHQUFJLEdBR0Y0QyxFQUFNNUUsT0FBUzZFLEVBQU03RSxPQUN2QmtDLEdBQUksR0FFQzRDLEdBQUs5QyxHQUFLRSxDQUNuQixDLDhEQ0dGLFVBakNBLFNBQW1Ca0MsRUFBcUJXLEVBQW1CekMsRyxRQUN6RCxJQUFJK0IsRUFBTUMsRUFDVixHQUFJRixFQUFPaEUsVUFBVXNDLFFBQVEsVUFBWSxFQUN2QzJCLEVBQU8vQixFQUFZMEMsT0FBT1osRUFBT2hFLFVBQVU2RSxNQUFNLEtBQUssU0FDakQsR0FBeUIsVUFBckJiLEVBQU9oRSxVQUNoQmlFLEVBQU8vQixFQUFZTyxVQUNkLENBQ0wsTUFBTXFDLEVBQVUsUUFBVWQsRUFBT2hFLFVBQVU2RSxNQUFNLElBQUksR0FDckRaLEVBQU8vQixFQUFZNkMsT0FBT0QsRSxDQUU1QixHQUFJSCxFQUFLM0UsVUFBVXNDLFFBQVEsVUFBWSxFQUNyQzRCLEVBQUtoQyxFQUFZMEMsT0FBT0QsRUFBSzNFLFVBQVU2RSxNQUFNLEtBQUssU0FDN0MsR0FBdUIsVUFBbkJGLEVBQUszRSxVQUNka0UsRUFBS2hDLEVBQVlPLFdBQ1osR0FDTGtDLEVBQUszRSxVQUFVc0MsUUFBUSxTQUFXLEdBQ2xDcUMsRUFBSzNFLFVBQVVzQyxRQUFRLGFBQWUsR0FDdENxQyxFQUFLM0UsVUFBVXNDLFFBQVEsZUFBaUIsRUFDeEMsQ0FDQSxJQUFJNUUsRUFBcUJpSCxFQUFLWixRQUFRLE9BRXRDRyxFQUFLaEMsRUFBWTZDLE9BQU9ySCxFQUFNc0MsVSxNQUN6QixHQUFJMkUsRUFBSzNFLFVBQVVzQyxRQUFRLFlBQWMsRUFBRyxDQUNqRCxJQUFJNUUsRUFBc0QsUUFBakMsRUFBa0IsUUFBbEIsRUFBQWlILEVBQUtLLHFCQUFhLGVBQUVBLHFCQUFhLGVBQUVBLGNBQzVEZCxFQUFLaEMsRUFBWTZDLE9BQU9ySCxFQUFNc0MsVSxLQUN6QixDQUNMLE1BQU04RSxFQUFVLFFBQVVILEVBQUszRSxVQUFVNkUsTUFBTSxJQUFJLEdBQ25EWCxFQUFLaEMsRUFBWTZDLE9BQU9ELEUsQ0FHMUIsTUFBTyxDQUFDYixFQUFNQyxFQUNoQixDLCtEQ3JCQSxVQVJBLFNBQWlCZSxHQUNmLElBQUssSUFBSXpLLEVBQUl5SyxFQUFNM0ssT0FBUyxFQUFHRSxFQUFJLEVBQUdBLElBQUssQ0FDekMsTUFBTTBLLEVBQUlDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVk3SyxFQUFJLEtBQ3pDeUssRUFBTXpLLEdBQUl5SyxFQUFNQyxJQUFNLENBQUNELEVBQU1DLEdBQUlELEVBQU16SyxHLENBRTFDLE9BQU95SyxDQUNULEMsR0NQSUssRUFBMkIsQ0FBQyxFQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCMUssSUFBakIySyxFQUNILE9BQU9BLEVBQWE3TCxRQUdyQixJQUFJRixFQUFTNEwsRUFBeUJFLEdBQVksQ0FDakQ3TCxHQUFJNkwsRUFFSjVMLFFBQVMsQ0FBQyxHQU9YLE9BSEE4TCxFQUFvQkYsR0FBVTlMLEVBQVFBLEVBQU9FLFFBQVMyTCxHQUcvQzdMLEVBQU9FLE9BQ2YsQ0NyQkEyTCxFQUFvQkksRUFBS2pNLElBQ3hCLElBQUlrTSxFQUFTbE0sR0FBVUEsRUFBT21NLFdBQzdCLElBQU9uTSxFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQTZMLEVBQW9CNUQsRUFBRWlFLEVBQVEsQ0FBRUUsRUFBR0YsSUFDNUJBLENBQU0sRUNMZEwsRUFBb0I1RCxFQUFJLENBQUMvSCxFQUFTbU0sS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYUixFQUFvQlUsRUFBRUYsRUFBWUMsS0FBU1QsRUFBb0JVLEVBQUVyTSxFQUFTb00sSUFDNUVFLE9BQU9DLGVBQWV2TSxFQUFTb00sRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRULEVBQW9CVSxFQUFJLENBQUNySixFQUFLMEosSUFBVUosT0FBT0ssVUFBVUMsZUFBZUMsS0FBSzdKLEVBQUswSixHQ0NsRmYsRUFBb0JtQixFQUFLOU0sSUFDSCxvQkFBWCtNLFFBQTBCQSxPQUFPQyxhQUMxQ1YsT0FBT0MsZUFBZXZNLEVBQVMrTSxPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RYLE9BQU9DLGVBQWV2TSxFQUFTLGFBQWMsQ0FBRWlOLE9BQU8sR0FBTyxFQ0w5RHRCLEVBQW9CdUIsUUFBS2hNLEUsTUNBekIsZUFHQSxTQUNBLFNBQ0EsT0FFQSxJQUFJbUssRUFBeUIsR0FDN0IsTUFBTThCLEVBQVEsQ0FBQyxJQUFLLElBQUssSUFBSyxLQUM5QixJQUFJN0UsRUFDQThFLEVBQ0FDLEdBQVUsRUFFRSxNQUNkLE1BQU1DLEVBQWlCLENBQ3JCbkMsT0FBUSxDQUNOb0MsT0FBUSxHQUNSQyxPQUFRLEdBQ1JDLE9BQVEsR0FDUkMsT0FBUSxHQUNSQyxPQUFRLEdBQ1JDLE9BQVEsR0FDUkMsT0FBUSxJQUVWaEYsTUFBTyxHQUNQbUMsT0FBUSxDQUNOaEQsRUFBRyxHQUNIRCxFQUFHLEdBQ0hFLEVBQUcsR0FDSEMsRUFBRyxLQUdQLElBQUssSUFBSUEsRUFBSSxFQUFHQSxFQUFJaUYsRUFBTXpNLE9BQVF3SCxJQUNoQyxJQUFLLElBQUlGLEVBQUksRUFBR0EsRUFBSSxHQUFJQSxJQUFLLENBQzNCLE1BQU10QixFQUFPLElBQUksVUFBS3NCLEVBQUdtRixFQUFNakYsR0FBSUYsRUFBSSxHQUFNLEVBQUksTUFBUSxTQUN6RHFELEVBQU14TCxLQUFLNkcsRSxDQUdmLE1BQU1vSCxHQUFXLGFBQVF6QyxHQUN6QkEsRUFBUXlDLEVBQ1J4RixFQUFjZ0YsRUFFZEEsRUFBS3pFLE1BQVFpRixFQUViLElBQUlDLEVBQVcsRUFDWEMsRUFBWSxFQUNaQyxFQUFRLEVBQ1ozRixFQUFjZ0YsRUFFZCxNQUFNRixFQUFXYyxhQUVqQixXQUNFLEdBQWMsS0FBVkQsRUFDRkUsY0FBY2YsT0FDVCxDQUNMYSxJQUNBLE1BQU1HLEVBQWNkLEVBQUt6RSxNQUFNeUUsRUFBS3pFLE1BQU1uSSxPQUFTLEdBQ25ENE0sRUFBS3pFLE1BQU1DLE1BQ1hpRixJQUNpQixJQUFiQSxJQUNGQSxFQUFXQyxFQUNYQSxLQUVFQSxFQUFZLEdBQ2RWLEVBQUtuQyxPQUFPLFFBQVU0QyxHQUFVbE8sS0FBS3VPLEUsQ0FHM0MsR0FsQndDLElBa0J4QyxFQUdGQyxHQUVBLE1BQU1oRyxFQUFjLEtBQ2xCL0QsU0FBU2dLLEtBQUt4SCxVQUFZLEdBQzFCLE1BQU1MLEVBQXdCbkMsU0FBU1csY0FBYyxPQUNyRFgsU0FBU2dLLEtBQUt2SixZQUFZMEIsR0FDMUJBLEVBQU1MLFVBQVksUUFDbEJLLEVBQU0xRyxHQUFLLFlBRVgsTUFBTXdPLEVBQXVCakssU0FBU1csY0FBYyxPQUNwRHNKLEVBQVFuSSxVQUFZLFdBQ3BCSyxFQUFNMUIsWUFBWXdKLEdBRWxCLFdBQ0UsTUFBTTFGLEVBQXFCdkUsU0FBU1csY0FBYyxPQUNsRDRELEVBQU16QyxVQUFZLFFBQ2xCLE1BQU1vSSxFQUEyQmxLLFNBQVNXLGNBQWMsT0FDeER1SixFQUFZcEksVUFBWSxjQUN4QnlDLEVBQU05RCxZQUFZeUosR0FDbEJELEVBQVF4SixZQUFZOEQsR0FDcEIsTUFBTUQsRUFBT04sRUFBWU8sTUFBTVAsRUFBWU8sTUFBTW5JLE9BQVMsR0FDMUQsSUFBSyxJQUFJZ0csS0FBUTRCLEVBQVlPLE1BQzNCNEYsRUFBVy9ILEVBQU04SCxHQUVuQjVGLEVBQUtqQixTQUFTLGFBQ2Q4RyxFQUFXN0YsRUFBTUMsR0FDakJELEVBQUtoQixZQUFZLFVBQ2xCLENBZEQsR0FnQkEsV0FDRSxNQUFNb0QsRUFBc0IxRyxTQUFTVyxjQUFjLE9BQ25EK0YsRUFBTzVFLFVBQVksU0FDbkJtSSxFQUFReEosWUFBWWlHLEdBRXBCLElBQUssSUFBSTBELEtBQVNwRyxFQUFZMEMsT0FBUSxDQUNwQyxNQUFNMkQsRUFBcUJySyxTQUFTVyxjQUFjLE9BQ2xEMEosRUFBTXZJLFVBQVksU0FBU3NJLElBQzNCMUQsRUFBT2pHLFlBQVk0SixHQUNMckcsRUFBWTBDLE9BQU8wRCxHQUMzQmpILFNBQVNDLElBQ2JBLEVBQUd4QixXQUFZLEVBQ2Z3QixFQUFHRSxZQUFZLGFBQ2ZGLEVBQUdsQixPQUFPbUksR0FDVixNQUFNdkgsRUFBc0JNLEVBQUdOLE9BQy9CQSxFQUFPakQsTUFBTXNGLE9BQVMzRixLQUNyQnNELEVBQWVqRCxNQUFNLGlCQUFtQixDQUFDLEcsQ0FHL0MsQ0FuQkQsR0FxQkEsV0FDRSxNQUFNZ0gsRUFBc0I3RyxTQUFTVyxjQUFjLE9BQ25Ea0csRUFBTy9FLFVBQVksU0FDbkJLLEVBQU0xQixZQUFZb0csR0FFbEIsSUFBSyxJQUFJeUQsS0FBTXRHLEVBQVk2QyxPQUFRLENBQ2pDLE1BQU0wRCxFQUFxQnZLLFNBQVNXLGNBQWMsT0FDbEQ0SixFQUFNekksVUFBWXdJLEVBQ2xCekQsRUFBT3BHLFlBQVk4SixHQUVuQixNQUFNeEQsRUFBUS9DLEVBQVk2QyxPQUFPeUQsR0FDakMsR0FBSXZELEVBQU0zSyxPQUFTLElBQ2pCMkssRUFBTTVELFNBQVNDLElBQ2JBLEVBQUdsQixPQUFPcUksR0FDVm5ILEVBQUdFLFlBQVksWUFBWSxJQUV6QnlGLEdBQVMsQ0FDWCxNQUFNekUsRUFBT3lDLEVBQU1BLEVBQU0zSyxPQUFTLEdBQ2xDa0ksRUFBSzFDLFdBQVksRUFDakIwQyxFQUFLaEIsWUFBWSxVLENBSWpCeUYsR0FDRi9JLFNBQVN3SyxpQkFBaUIsU0FBU3JILFNBQVNDLEtBQzFDLGFBQVVBLEVBQUlXLEVBQWFDLEVBQVksRyxDQUk5QyxDQTdCRCxJQStCSytFLEdBQVcvRSxFQUFZNkMsT0FBZSxPQUFFekssUUFBVSxJQUNyRHlOLGNBQWNmLEdBQ2RDLEdBQVUsRUFDVmhGLEksRUFXSixTQUFTb0csRUFBVy9ILEVBQXFCbUMsR0FDdkNuQyxFQUFLRixPQUFPcUMsRUFDZCxDQVRBUixJQUdFK0UsRUFBV2MsYUFBWSxJQUFNN0YsS0FBZSxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbWFpbi5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly8vLi9tYWluLmNzcz84YWQyIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NsYXNzZXMvY2FyZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hZGRFdmVudHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvY2hlY2tBcHBseWluZy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9nZXRGcm9tVG8udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvc2h1ZmZsZS50cyIsIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcclxuICAtLWNhcmQtaGVpZ2h0OiAxNTBweDtcclxuICAtLWNhcmQtd2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG5odG1sIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIFwiQ2VudHVyeSBHb3RoaWNcIiwgc2Fucy1zZXJpZjtcclxuICAvKiBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCB0b3AsIGRhcmtncmVlbiA1JSwgcmdiKDAsIDI5LCAwKSk7ICovXHJcbiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGVsbGlwc2UgYXQgNTAlIC0xMTAlLCBkYXJrZ3JlZW4gMCUsIHJnYigwLCAyOSwgMCkgMTAwJSk7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGNvbG9yOiAjY2NiZGJkO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5ib2FyZCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICBoZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4uZGVja2FUb3Age1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBnYXA6IHZhcigtLWNhcmQtd2lkdGgpO1xyXG59XHJcblxyXG4uYm9hcmQgLmlubmVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDgwMHB4O1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAyMHB4IDAgMTBweCAwO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHdpZHRoOiB2YXIoLS1jYXJkLXdpZHRoKTtcclxuICAvKiBoZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTsgKi9cclxuICBtaW4taGVpZ2h0OiB2YXIoLS1jYXJkLWhlaWdodCk7XHJcblxyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblxyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcblxyXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c3RlZWxibHVlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcblxyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG5cclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uZGVja2EgLmNhcmQge1xyXG4gIHRvcDogMjBweDtcclxufVxyXG5cclxuLnJlZCB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmJsYWNrIHtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5zdWl0SWNvbiB7XHJcbiAgaGVpZ2h0OiAyNSU7XHJcbiAgZm9udC1zaXplOiAyLjNlbTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIG1hcmdpbjogMCA4cHg7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbn1cclxuXHJcbi5yb3RhdGVkIHtcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG59XHJcblxyXG4uc3VpdFdlaWdodCB7XHJcbiAgZm9udC1zaXplOiAzLjVlbTtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4uZmxpcHBlZCB7XHJcbiAgei1pbmRleDogMDtcclxufVxyXG5cclxuLmZsaXBwZWQ6OmFmdGVyIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTVmNztcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCBibGFjayAyNCUsIHRyYW5zcGFyZW50IDI1JSksXHJcbiAgICBsaW5lYXItZ3JhZGllbnQoMjI1ZGVnLCBibGFjayAyNSUsIHRyYW5zcGFyZW50IDI1JSksIGxpbmVhci1ncmFkaWVudCg0NWRlZywgYmxhY2sgMjUlLCB0cmFuc3BhcmVudCAyNSUpLFxyXG4gICAgbGluZWFyLWdyYWRpZW50KDMxNWRlZywgYmxhY2sgMjUlLCAjYzdjN2M3IDI1JSk7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTBweCAwLCAxMHB4IDAsIDAgMCwgMCAwO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogMTBweCAxMHB4O1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XHJcblxyXG4gIHotaW5kZXg6IDI7XHJcbn1cclxuXHJcbi5kZWNrYSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG5cclxuICBtYXJnaW4tdG9wOiA0dmg7XHJcbiAgbWFyZ2luLWxlZnQ6IDR2dztcclxuXHJcbiAgd2lkdGg6IGNhbGModmFyKC0tY2FyZC13aWR0aCkgKiAyLjUpO1xyXG4gIGhlaWdodDogY2FsYyh2YXIoLS1jYXJkLWhlaWdodCkgKiAxLjIpO1xyXG5cclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG59XHJcblxyXG4uZGVja2FIb2xkZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAvKiBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsgKi9cclxuICBmbG9hdDogbGVmdDtcclxuICB3aWR0aDogY2FsYyh2YXIoLS1jYXJkLXdpZHRoKSAqIDEuNCk7XHJcbiAgaGVpZ2h0OiB2YXIoLS1jYXJkLWhlaWdodCk7XHJcbn1cclxuXHJcbi5kZWNrYUhvbGRlciAuY2FyZCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICB0b3A6IDA7XHJcbn1cclxuXHJcbi5kZWNrYUhvbGRlciAuY2FyZDpmaXJzdC1jaGlsZCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTBncmFkKTtcclxufVxyXG5cclxuLmRlY2thT3BlbiB7XHJcbiAgLyogcG9zaXRpb246IGFic29sdXRlOyAqL1xyXG4gIG1hcmdpbi1ib3R0b206IDR2aDtcclxufVxyXG5cclxuLnBsYWNlcyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgZ2FwOiBjYWxjKHZhcigtLWNhcmQtd2lkdGgpIC8gNSk7XHJcblxyXG4gIG1hcmdpbi10b3A6IDR2aDtcclxuICBtYXJnaW4tcmlnaHQ6IDR2dztcclxuXHJcbiAgd2lkdGg6IGNhbGModmFyKC0tY2FyZC13aWR0aCkgKiA1KTtcclxuICBoZWlnaHQ6IGNhbGModmFyKC0tY2FyZC1oZWlnaHQpICogMS4yKTtcclxuXHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxufVxyXG5cclxuLnBsYWNlIHtcclxuICB3aWR0aDogdmFyKC0tY2FyZC13aWR0aCk7XHJcbiAgaGVpZ2h0OiB2YXIoLS1jYXJkLWhlaWdodCk7XHJcblxyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbn1cclxuXHJcbi5zdGFja3Mge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBnYXA6IGNhbGModmFyKC0tY2FyZC13aWR0aCkgLyA1KTtcclxuXHJcbiAgbWFyZ2luLXRvcDogMTB2aDtcclxuXHJcbiAgd2lkdGg6IGNhbGModmFyKC0tY2FyZC13aWR0aCkgKiA4ICsgOHZ3KTtcclxuXHJcbiAgLyogaGVpZ2h0OiBjYWxjKHZhcigtLWNhcmQtaGVpZ2h0KSAqIDEuMik7ICovXHJcblxyXG4gIC8qIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyAqL1xyXG4gIC8qIGJvcmRlci1yYWRpdXM6IDE1cHg7ICovXHJcbn1cclxuXHJcbi5zdGFjazEsXHJcbi5zdGFjazIsXHJcbi5zdGFjazMsXHJcbi5zdGFjazQsXHJcbi5zdGFjazUsXHJcbi5zdGFjazYsXHJcbi5zdGFjazcge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAvKiBkaXNwbGF5OiBmbGV4OyAqL1xyXG4gIC8qIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICovXHJcblxyXG4gIHdpZHRoOiB2YXIoLS1jYXJkLXdpZHRoKTtcclxuICBoZWlnaHQ6IGNhbGModmFyKC0tY2FyZC1oZWlnaHQpIC8gMyk7XHJcblxyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICBib3JkZXItZW5kLWVuZC1yYWRpdXM6IDA7XHJcbiAgYm9yZGVyLWVuZC1zdGFydC1yYWRpdXM6IDA7XHJcblxyXG4gIC8qIG1hcmdpbi10b3A6IC0xMDBweDsgKi9cclxuICBwYWRkaW5nOiA3OHB4IDA7XHJcbn1cclxuXHJcbi5zdGFjazEgLmNhcmQ6Zmlyc3QtY2hpbGQsXHJcbi5zdGFjazIgLmNhcmQ6Zmlyc3QtY2hpbGQsXHJcbi5zdGFjazMgLmNhcmQ6Zmlyc3QtY2hpbGQsXHJcbi5zdGFjazQgLmNhcmQ6Zmlyc3QtY2hpbGQsXHJcbi5zdGFjazUgLmNhcmQ6Zmlyc3QtY2hpbGQsXHJcbi5zdGFjazYgLmNhcmQ6Zmlyc3QtY2hpbGQsXHJcbi5zdGFjazcgLmNhcmQ6Zmlyc3QtY2hpbGQge1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuXHJcbi5zdGFjazEgLmNhcmQsXHJcbi5zdGFjazIgLmNhcmQsXHJcbi5zdGFjazMgLmNhcmQsXHJcbi5zdGFjazQgLmNhcmQsXHJcbi5zdGFjazUgLmNhcmQsXHJcbi5zdGFjazYgLmNhcmQsXHJcbi5zdGFjazcgLmNhcmQge1xyXG4gIG1hcmdpbjogMDtcclxuICBoZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTtcclxuICBtaW4taGVpZ2h0OiBjYWxjKHZhcigtLWNhcmQtaGVpZ2h0KSAvIDIpO1xyXG4gIG1hcmdpbi10b3A6IC0xMDBweDtcclxuICBib3JkZXItdG9wOiAycHggc29saWQgYmxhY2s7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMnB4IHNvbGlkIGJsYWNrO1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAycHggc29saWQgYmxhY2s7XHJcbiAgYm94LXNoYWRvdzogMHB4IDBweCAwIGJsYWNrLCAwcHggLTFweCA1cHggYmxhY2s7XHJcbn1cclxuXHJcbi5zdGFjazEgLmNhcmQ6bGFzdC1jaGlsZCxcclxuLnN0YWNrMiAuY2FyZDpsYXN0LWNoaWxkLFxyXG4uc3RhY2szIC5jYXJkOmxhc3QtY2hpbGQsXHJcbi5zdGFjazQgLmNhcmQ6bGFzdC1jaGlsZCxcclxuLnN0YWNrNSAuY2FyZDpsYXN0LWNoaWxkLFxyXG4uc3RhY2s2IC5jYXJkOmxhc3QtY2hpbGQsXHJcbi5zdGFjazcgLmNhcmQ6bGFzdC1jaGlsZCB7XHJcbiAgaGVpZ2h0OiB2YXIoLS1jYXJkLWhlaWdodCk7XHJcbiAgbWluLWhlaWdodDogdmFyKC0tY2FyZC1oZWlnaHQpO1xyXG59XHJcblxyXG4ucGxhY2Uge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG4vKiAucGxhY2UgLmNhcmQ6Zmlyc3QtY2hpbGQge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW46IDA7XHJcbn0gKi9cclxuXHJcbi5wbGFjZSAuY2FyZCB7XHJcbiAgLyogbWFyZ2luLXRvcDogY2FsYyh2YXIoLS1jYXJkLWhlaWdodCkgKiAtMSk7ICovXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG59XHJcbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vbWFpbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxvQkFBb0I7RUFDcEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDVixvREFBb0Q7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RUE7Ozs7Ozs7RUFPRSxnQkFBZ0I7QUFDbEI7O0FBRUE7Ozs7Ozs7RUFPRSxTQUFTO0VBQ1QsMEJBQTBCO0VBQzFCLHdDQUF3QztFQUN4QyxrQkFBa0I7RUFDbEIsMkJBQTJCO0VBQzNCLHVDQUF1QztFQUN2Qyx3Q0FBd0M7RUFDeEMsK0NBQStDO0FBQ2pEOztBQUVBOzs7Ozs7O0VBT0UsMEJBQTBCO0VBQzFCLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBOzs7R0FHRzs7QUFFSDtFQUNFLCtDQUErQztFQUMvQyxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87QUFDVFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxyXFxuICAtLWNhcmQtaGVpZ2h0OiAxNTBweDtcXHJcXG4gIC0tY2FyZC13aWR0aDogMTAwcHg7XFxyXFxufVxcclxcblxcclxcbmh0bWwge1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIGZvbnQtZmFtaWx5OiBcXFwiUmFsZXdheVxcXCIsIFxcXCJDZW50dXJ5IEdvdGhpY1xcXCIsIHNhbnMtc2VyaWY7XFxyXFxuICAvKiBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCB0b3AsIGRhcmtncmVlbiA1JSwgcmdiKDAsIDI5LCAwKSk7ICovXFxyXFxuICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCA1MCUgLTExMCUsIGRhcmtncmVlbiAwJSwgcmdiKDAsIDI5LCAwKSAxMDAlKTtcXHJcXG59XFxyXFxuXFxyXFxuYm9keSB7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgbWFyZ2luOiAwIGF1dG87XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICBjb2xvcjogI2NjYmRiZDtcXHJcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbi5ib2FyZCB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuXFxyXFxuICBoZWlnaHQ6IDEwMHZoO1xcclxcbn1cXHJcXG5cXHJcXG4uZGVja2FUb3Age1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxyXFxuICBnYXA6IHZhcigtLWNhcmQtd2lkdGgpO1xcclxcbn1cXHJcXG5cXHJcXG4uYm9hcmQgLmlubmVyIHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIHdpZHRoOiA4MDBweDtcXHJcXG4gIG1heC13aWR0aDogMTAwJTtcXHJcXG4gIHBhZGRpbmc6IDIwcHggMCAxMHB4IDA7XFxyXFxuICBtYXJnaW46IGF1dG87XFxyXFxuICBoZWlnaHQ6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbi5jYXJkIHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICB3aWR0aDogdmFyKC0tY2FyZC13aWR0aCk7XFxyXFxuICAvKiBoZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTsgKi9cXHJcXG4gIG1pbi1oZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTtcXHJcXG5cXHJcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuXFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxyXFxuXFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodHN0ZWVsYmx1ZTtcXHJcXG4gIGxlZnQ6IDA7XFxyXFxuICB1c2VyLXNlbGVjdDogbm9uZTtcXHJcXG5cXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuXFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4uZGVja2EgLmNhcmQge1xcclxcbiAgdG9wOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG4ucmVkIHtcXHJcXG4gIGNvbG9yOiByZWQ7XFxyXFxufVxcclxcblxcclxcbi5ibGFjayB7XFxyXFxuICBjb2xvcjogYmxhY2s7XFxyXFxufVxcclxcblxcclxcbi5zdWl0SWNvbiB7XFxyXFxuICBoZWlnaHQ6IDI1JTtcXHJcXG4gIGZvbnQtc2l6ZTogMi4zZW07XFxyXFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcclxcbiAgbWFyZ2luOiAwIDhweDtcXHJcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4ucm90YXRlZCB7XFxyXFxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xcclxcbn1cXHJcXG5cXHJcXG4uc3VpdFdlaWdodCB7XFxyXFxuICBmb250LXNpemU6IDMuNWVtO1xcclxcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXHJcXG59XFxyXFxuXFxyXFxuLmZsaXBwZWQge1xcclxcbiAgei1pbmRleDogMDtcXHJcXG59XFxyXFxuXFxyXFxuLmZsaXBwZWQ6OmFmdGVyIHtcXHJcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDEwMCU7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlNWY3O1xcclxcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgYmxhY2sgMjQlLCB0cmFuc3BhcmVudCAyNSUpLFxcclxcbiAgICBsaW5lYXItZ3JhZGllbnQoMjI1ZGVnLCBibGFjayAyNSUsIHRyYW5zcGFyZW50IDI1JSksIGxpbmVhci1ncmFkaWVudCg0NWRlZywgYmxhY2sgMjUlLCB0cmFuc3BhcmVudCAyNSUpLFxcclxcbiAgICBsaW5lYXItZ3JhZGllbnQoMzE1ZGVnLCBibGFjayAyNSUsICNjN2M3YzcgMjUlKTtcXHJcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IDEwcHggMCwgMTBweCAwLCAwIDAsIDAgMDtcXHJcXG4gIGJhY2tncm91bmQtc2l6ZTogMTBweCAxMHB4O1xcclxcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcXHJcXG5cXHJcXG4gIHotaW5kZXg6IDI7XFxyXFxufVxcclxcblxcclxcbi5kZWNrYSB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG5cXHJcXG4gIG1hcmdpbi10b3A6IDR2aDtcXHJcXG4gIG1hcmdpbi1sZWZ0OiA0dnc7XFxyXFxuXFxyXFxuICB3aWR0aDogY2FsYyh2YXIoLS1jYXJkLXdpZHRoKSAqIDIuNSk7XFxyXFxuICBoZWlnaHQ6IGNhbGModmFyKC0tY2FyZC1oZWlnaHQpICogMS4yKTtcXHJcXG5cXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcXHJcXG59XFxyXFxuXFxyXFxuLmRlY2thSG9sZGVyIHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIC8qIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgYWxpZ24tY29udGVudDogY2VudGVyOyAqL1xcclxcbiAgZmxvYXQ6IGxlZnQ7XFxyXFxuICB3aWR0aDogY2FsYyh2YXIoLS1jYXJkLXdpZHRoKSAqIDEuNCk7XFxyXFxuICBoZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTtcXHJcXG59XFxyXFxuXFxyXFxuLmRlY2thSG9sZGVyIC5jYXJkIHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcblxcclxcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxyXFxuICB0b3A6IDA7XFxyXFxufVxcclxcblxcclxcbi5kZWNrYUhvbGRlciAuY2FyZDpmaXJzdC1jaGlsZCB7XFxyXFxuICBtYXJnaW4tbGVmdDogMTVweDtcXHJcXG4gIHRyYW5zZm9ybTogcm90YXRlKDEwZ3JhZCk7XFxyXFxufVxcclxcblxcclxcbi5kZWNrYU9wZW4ge1xcclxcbiAgLyogcG9zaXRpb246IGFic29sdXRlOyAqL1xcclxcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xcclxcbn1cXHJcXG5cXHJcXG4ucGxhY2VzIHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBnYXA6IGNhbGModmFyKC0tY2FyZC13aWR0aCkgLyA1KTtcXHJcXG5cXHJcXG4gIG1hcmdpbi10b3A6IDR2aDtcXHJcXG4gIG1hcmdpbi1yaWdodDogNHZ3O1xcclxcblxcclxcbiAgd2lkdGg6IGNhbGModmFyKC0tY2FyZC13aWR0aCkgKiA1KTtcXHJcXG4gIGhlaWdodDogY2FsYyh2YXIoLS1jYXJkLWhlaWdodCkgKiAxLjIpO1xcclxcblxcclxcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xcclxcbn1cXHJcXG5cXHJcXG4ucGxhY2Uge1xcclxcbiAgd2lkdGg6IHZhcigtLWNhcmQtd2lkdGgpO1xcclxcbiAgaGVpZ2h0OiB2YXIoLS1jYXJkLWhlaWdodCk7XFxyXFxuXFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxyXFxufVxcclxcblxcclxcbi5zdGFja3Mge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxyXFxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBnYXA6IGNhbGModmFyKC0tY2FyZC13aWR0aCkgLyA1KTtcXHJcXG5cXHJcXG4gIG1hcmdpbi10b3A6IDEwdmg7XFxyXFxuXFxyXFxuICB3aWR0aDogY2FsYyh2YXIoLS1jYXJkLXdpZHRoKSAqIDggKyA4dncpO1xcclxcblxcclxcbiAgLyogaGVpZ2h0OiBjYWxjKHZhcigtLWNhcmQtaGVpZ2h0KSAqIDEuMik7ICovXFxyXFxuXFxyXFxuICAvKiBib3JkZXI6IDFweCBzb2xpZCBibGFjazsgKi9cXHJcXG4gIC8qIGJvcmRlci1yYWRpdXM6IDE1cHg7ICovXFxyXFxufVxcclxcblxcclxcbi5zdGFjazEsXFxyXFxuLnN0YWNrMixcXHJcXG4uc3RhY2szLFxcclxcbi5zdGFjazQsXFxyXFxuLnN0YWNrNSxcXHJcXG4uc3RhY2s2LFxcclxcbi5zdGFjazcge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgLyogZGlzcGxheTogZmxleDsgKi9cXHJcXG4gIC8qIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICovXFxyXFxuXFxyXFxuICB3aWR0aDogdmFyKC0tY2FyZC13aWR0aCk7XFxyXFxuICBoZWlnaHQ6IGNhbGModmFyKC0tY2FyZC1oZWlnaHQpIC8gMyk7XFxyXFxuXFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxyXFxuICBib3JkZXItYm90dG9tOiBub25lO1xcclxcbiAgYm9yZGVyLWVuZC1lbmQtcmFkaXVzOiAwO1xcclxcbiAgYm9yZGVyLWVuZC1zdGFydC1yYWRpdXM6IDA7XFxyXFxuXFxyXFxuICAvKiBtYXJnaW4tdG9wOiAtMTAwcHg7ICovXFxyXFxuICBwYWRkaW5nOiA3OHB4IDA7XFxyXFxufVxcclxcblxcclxcbi5zdGFjazEgLmNhcmQ6Zmlyc3QtY2hpbGQsXFxyXFxuLnN0YWNrMiAuY2FyZDpmaXJzdC1jaGlsZCxcXHJcXG4uc3RhY2szIC5jYXJkOmZpcnN0LWNoaWxkLFxcclxcbi5zdGFjazQgLmNhcmQ6Zmlyc3QtY2hpbGQsXFxyXFxuLnN0YWNrNSAuY2FyZDpmaXJzdC1jaGlsZCxcXHJcXG4uc3RhY2s2IC5jYXJkOmZpcnN0LWNoaWxkLFxcclxcbi5zdGFjazcgLmNhcmQ6Zmlyc3QtY2hpbGQge1xcclxcbiAgYm94LXNoYWRvdzogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLnN0YWNrMSAuY2FyZCxcXHJcXG4uc3RhY2syIC5jYXJkLFxcclxcbi5zdGFjazMgLmNhcmQsXFxyXFxuLnN0YWNrNCAuY2FyZCxcXHJcXG4uc3RhY2s1IC5jYXJkLFxcclxcbi5zdGFjazYgLmNhcmQsXFxyXFxuLnN0YWNrNyAuY2FyZCB7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBoZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTtcXHJcXG4gIG1pbi1oZWlnaHQ6IGNhbGModmFyKC0tY2FyZC1oZWlnaHQpIC8gMik7XFxyXFxuICBtYXJnaW4tdG9wOiAtMTAwcHg7XFxyXFxuICBib3JkZXItdG9wOiAycHggc29saWQgYmxhY2s7XFxyXFxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAycHggc29saWQgYmxhY2s7XFxyXFxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMnB4IHNvbGlkIGJsYWNrO1xcclxcbiAgYm94LXNoYWRvdzogMHB4IDBweCAwIGJsYWNrLCAwcHggLTFweCA1cHggYmxhY2s7XFxyXFxufVxcclxcblxcclxcbi5zdGFjazEgLmNhcmQ6bGFzdC1jaGlsZCxcXHJcXG4uc3RhY2syIC5jYXJkOmxhc3QtY2hpbGQsXFxyXFxuLnN0YWNrMyAuY2FyZDpsYXN0LWNoaWxkLFxcclxcbi5zdGFjazQgLmNhcmQ6bGFzdC1jaGlsZCxcXHJcXG4uc3RhY2s1IC5jYXJkOmxhc3QtY2hpbGQsXFxyXFxuLnN0YWNrNiAuY2FyZDpsYXN0LWNoaWxkLFxcclxcbi5zdGFjazcgLmNhcmQ6bGFzdC1jaGlsZCB7XFxyXFxuICBoZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTtcXHJcXG4gIG1pbi1oZWlnaHQ6IHZhcigtLWNhcmQtaGVpZ2h0KTtcXHJcXG59XFxyXFxuXFxyXFxuLnBsYWNlIHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG59XFxyXFxuLyogLnBsYWNlIC5jYXJkOmZpcnN0LWNoaWxkIHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG59ICovXFxyXFxuXFxyXFxuLnBsYWNlIC5jYXJkIHtcXHJcXG4gIC8qIG1hcmdpbi10b3A6IGNhbGModmFyKC0tY2FyZC1oZWlnaHQpICogLTEpOyAqL1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgbGVmdDogMDtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiaW1wb3J0IHsgTm9kZSwgUHJpdmF0ZUlkZW50aWZpZXIgfSBmcm9tIFwidHlwZXNjcmlwdFwiO1xyXG5cclxuLy8gdHlwZSBTdWl0ID0gXCJkXCIgfCBcImNcIiB8IFwiaFwiIHwgXCJzXCI7XHJcbnR5cGUgU3VpdENvbG9yID0gXCJyZWRcIiB8IFwiYmxhY2tcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2FyZEludGVyZmFjZSB7XHJcbiAgcmVtb3ZlQ2xhc3MoYXJnMDogc3RyaW5nKTogdW5rbm93bjtcclxuICByZWFkb25seSBudW1iOiBudW1iZXI7XHJcbiAgcmVhZG9ubHkgd2VpZ2h0OiBudW1iZXI7XHJcbiAgcmVhZG9ubHkgc3VpdDogc3RyaW5nO1xyXG4gIGNvbG9yOiBTdWl0Q29sb3I7XHJcbiAgaXNGbGlwcGVkOiBib29sZWFuO1xyXG4gIGNhcmRTdWl0Pzogc3RyaW5nO1xyXG4gIGNsYXNzTmFtZT86IChTdHJpbmcgfCBudW1iZXIpW107XHJcbiAgY2FyZD86IHsgW2tleTogc3RyaW5nXTogYW55IH0gfCBudWxsO1xyXG4gIGNsYXNzTGlzdD86IERPTVRva2VuTGlzdDtcclxuICBwYXJlbnQ/OiBIVE1MRWxlbWVudDtcclxuXHJcbiAgcmVuZGVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50KTogdm9pZDtcclxuICBhZGRDbGFzcyhhcmc6IHN0cmluZyk6IHZvaWQ7XHJcbn1cclxuXHJcbi8vIOKZpiBkaWFtb25kcywg4pmjIGNsdWJzLCDimaUgaGVhcnRzLCDimaAgc3BhZGVzXHJcblxyXG5jbGFzcyBDYXJkIGltcGxlbWVudHMgQ2FyZEludGVyZmFjZSB7XHJcbiAgcHVibGljIG51bWI6IG51bWJlcjtcclxuICBwdWJsaWMgc3VpdDogc3RyaW5nO1xyXG4gIHB1YmxpYyBjb2xvcjogU3VpdENvbG9yO1xyXG4gIHB1YmxpYyBpc0ZsaXBwZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwdWJsaWMgY2xhc3NOYW1lOiBzdHJpbmdbXTtcclxuICBwdWJsaWMgY2xhc3NMaXN0OiBET01Ub2tlbkxpc3QgfCB1bmRlZmluZWQ7XHJcbiAgcHVibGljIHdlaWdodDogbnVtYmVyO1xyXG4gIHB1YmxpYyBjYXJkOiB7IFtrZXk6IHN0cmluZ106IGFueSB9IHwgdW5kZWZpbmVkO1xyXG4gIHB1YmxpYyBwYXJlbnQ/OiBIVE1MRWxlbWVudCB8IHVuZGVmaW5lZDtcclxuXHJcbiAgY29uc3RydWN0b3IobnVtOiBudW1iZXIsIHN1aXQ6IHN0cmluZywgY29sb3I6IFN1aXRDb2xvcikge1xyXG4gICAgdGhpcy5udW1iID0gbnVtO1xyXG4gICAgdGhpcy5zdWl0ID0gc3VpdDtcclxuICAgIHRoaXMuY2xhc3NOYW1lID0gW1wiY2FyZFwiXTtcclxuICAgIHRoaXMud2VpZ2h0ID0gdGhpcy5nZXRXZWlnaHQobnVtKTtcclxuICAgIHRoaXMuY29sb3IgPSB0aGlzLmdldENvbG9yKCk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoZWxlbWVudDogSFRNTEVsZW1lbnQpOiB2b2lkIHtcclxuICAgIGNvbnN0IGJvYXJkID0gPEhUTUxFbGVtZW50PmVsZW1lbnQ7XHJcbiAgICBjb25zdCBjYXJkID0gPHsgW2tleTogc3RyaW5nXTogYW55IH0+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XHJcbiAgICBjYXJkLm9iaiA9IHRoaXM7XHJcbiAgICB0aGlzLmNsYXNzTGlzdCA9IGNhcmQuY2xhc3NMaXN0O1xyXG4gICAgdGhpcy5jbGFzc0xpc3Q/LmFkZCguLi50aGlzLmNsYXNzTmFtZSk7XHJcbiAgICBjb25zdCBzdWl0SWNvbiA9IDxIVE1MRGl2RWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIHN1aXRJY29uLmlubmVySFRNTCA9IHRoaXMuZ2V0U3VpdEljb24oKTtcclxuICAgIHN1aXRJY29uLmNsYXNzTGlzdC5hZGQoXCJzdWl0SWNvblwiLCB0aGlzLmNvbG9yKTtcclxuICAgIGJvYXJkLmFwcGVuZENoaWxkKGNhcmQgYXMgQ2hpbGROb2RlKTtcclxuXHJcbiAgICBjb25zdCBkaXNwbGF5cyA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIGRpc3BsYXlzLmlubmVySFRNTCA9IHRoaXMuZ2V0U3VpdCh0aGlzLm51bWIpLnRvU3RyaW5nKCk7XHJcbiAgICBkaXNwbGF5cy5jbGFzc0xpc3QuYWRkKFwic3VpdFdlaWdodFwiLCB0aGlzLmNvbG9yKTtcclxuICAgIGNvbnN0IHNlY29uZFN1aXRJY29uID0gPEhUTUxFbGVtZW50PnN1aXRJY29uLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHNlY29uZFN1aXRJY29uLmNsYXNzTGlzdC5hZGQoXCJyb3RhdGVkXCIsIHRoaXMuY29sb3IpO1xyXG5cclxuICAgIC8vIGNhcmQuZHJhZ2dhYmxlID0gdHJ1ZTtcclxuXHJcbiAgICBjYXJkLmFwcGVuZENoaWxkKHN1aXRJY29uKTtcclxuICAgIGNhcmQuYXBwZW5kQ2hpbGQoZGlzcGxheXMpO1xyXG4gICAgY2FyZC5hcHBlbmRDaGlsZChzZWNvbmRTdWl0SWNvbik7XHJcbiAgICBpZiAoIXRoaXMuaXNGbGlwcGVkKSB7XHJcbiAgICAgIHRoaXMuY2xhc3NMaXN0Py5hZGQoXCJmbGlwcGVkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMucGFyZW50ID0gYm9hcmQ7XHJcbiAgICB0aGlzLmNhcmQgPSBjYXJkO1xyXG4gIH1cclxuXHJcbiAgcmVyZW5kZXIoKSB7XHJcbiAgICAodGhpcy5jYXJkIGFzIEhUTUxFbGVtZW50KS5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLCBcIlwiKTtcclxuICAgIHRoaXMucGFyZW50Py5hcHBlbmRDaGlsZCh0aGlzLmNhcmQgYXMgSFRNTEVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q2xhc3MoLi4uYXJnOiAoc3RyaW5nIHwgbnVtYmVyKVtdKSB7XHJcbiAgICBjb25zdCBjbGFzc0xpc3Q6IHN0cmluZ1tdID0gWy4uLmFyZ3VtZW50c107XHJcbiAgICBjbGFzc0xpc3QuZm9yRWFjaCgoZWwpID0+IHtcclxuICAgICAgdGhpcy5jbGFzc05hbWUucHVzaChlbCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdldFN1aXQobnVtOiBudW1iZXIpIHtcclxuICAgIGNvbnN0IHN1aXQ6IHsgW2tleTogbnVtYmVyXTogc3RyaW5nIH0gPSB7XHJcbiAgICAgIDExOiBcItCSXCIsXHJcbiAgICAgIDEyOiBcItCUXCIsXHJcbiAgICAgIDEzOiBcIktcIixcclxuICAgICAgMTogXCJUXCIsXHJcbiAgICB9O1xyXG4gICAgaWYgKG51bSA+IDEwKSB7XHJcbiAgICAgIHJldHVybiBzdWl0W251bV07XHJcbiAgICB9IGVsc2UgaWYgKG51bSA9PT0gMSkge1xyXG4gICAgICByZXR1cm4gc3VpdFtudW1dO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIG51bTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFkZENsYXNzKGFyZzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICB0aGlzLmNsYXNzTmFtZT8ucHVzaChhcmcpO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2xhc3MoYXJnOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLmNsYXNzTGlzdCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybihcInJlbW92aW5nIGZyb20gY2xhc3MgbGlzdCBiZWZvcmUgaW5pdFwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNsYXNzTGlzdD8ucmVtb3ZlKGFyZyk7XHJcbiAgfVxyXG5cclxuICBnZXRTdWl0SWNvbigpIHtcclxuICAgIGNvbnN0IHN1aXRzTWFwOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge1xyXG4gICAgICBkOiBcIuKZplwiLFxyXG4gICAgICBjOiBcIuKZo1wiLFxyXG4gICAgICBoOiBcIuKZpVwiLFxyXG4gICAgICBzOiBcIuKZoFwiLFxyXG4gICAgfTtcclxuICAgIHJldHVybiBzdWl0c01hcFt0aGlzLnN1aXRdO1xyXG4gIH1cclxuXHJcbiAgZ2V0V2VpZ2h0KG51bTogc3RyaW5nIHwgbnVtYmVyKTogbnVtYmVyIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKHR5cGVvZiBudW0pO1xyXG4gICAgaWYgKHR5cGVvZiBudW0gPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgcmV0dXJuIDEwO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIG51bTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldENvbG9yKCkge1xyXG4gICAgaWYgKHRoaXMuc3VpdCA9PT0gXCJkXCIgfHwgdGhpcy5zdWl0ID09PSBcImhcIikge1xyXG4gICAgICByZXR1cm4gKHRoaXMuY29sb3IgPSBcInJlZFwiKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiAodGhpcy5jb2xvciA9IFwiYmxhY2tcIik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25zb2xlKCk6IHZvaWQge1xyXG4gICAgY29uc29sZS5sb2coXCJjYXJkZFwiKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmQ7XHJcbiIsImltcG9ydCBnZXRGcm9tVG8gZnJvbSBcIi4vZ2V0RnJvbVRvXCI7XHJcbmltcG9ydCB7IGFjY2VwdGVkUGxhY2UsIGFjY2VwdGVkU3RhY2sgfSBmcm9tIFwiLi9jaGVja0FwcGx5aW5nXCI7XHJcblxyXG5sZXQgYWN0aXZlQ2FyZHM6IGFueSA9IFtdO1xyXG5cclxuZnVuY3Rpb24gYWRkRXZlbnRzKGNhcmQ6IGFueSwgcmVuZGVyQm9hcmQ6IEZ1bmN0aW9uLCBjdXJyZW50R2FtZTogYW55KSB7XHJcbiAgYWN0aXZlQ2FyZHMgPSBbXTtcclxuXHJcbiAgKGNhcmQgYXMgSFRNTEVsZW1lbnQpLm9ubW91c2Vkb3duID0gZnVuY3Rpb24gKGU6IE1vdXNlRXZlbnQpIHtcclxuICAgIGlmIChhY3RpdmVDYXJkcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5jdXJzb3IgPSBcIm5vbmVcIjtcclxuICAgIGlmIChcclxuICAgICAgKGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50KS5jbGFzc05hbWUuaW5kZXhPZihcInN1aXRXZWlnaHRcIikgPiAtMSB8fFxyXG4gICAgICAoZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmNsYXNzTmFtZS5pbmRleE9mKFwic3VpdEljb25cIikgPiAtMVxyXG4gICAgKSB7XHJcbiAgICB9XHJcbiAgICBzdGFydERyYWcoZSk7XHJcbiAgfTtcclxuICB3aW5kb3cub25tb3VzZW1vdmUgPSBmdW5jdGlvbiAoZTogYW55KSB7XHJcbiAgICBjb25zdCBsYXN0UG9zWCA9IGUuY2xpZW50WDtcclxuICAgIGNvbnN0IGxhc3RQb3NZID0gZS5jbGllbnRZO1xyXG4gICAgbW92ZURyYWcoZSwgbGFzdFBvc1gsIGxhc3RQb3NZKTtcclxuICB9O1xyXG5cclxuICB3aW5kb3cub25tb3VzZXVwID0gZnVuY3Rpb24gKGU6IE1vdXNlRXZlbnQpIHtcclxuICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5jdXJzb3IgPSBcImF1dG9cIjtcclxuICAgIGNvbnN0IGxhc3RQb3NYID0gZS5wYWdlWDtcclxuICAgIGNvbnN0IGxhc3RQb3NZID0gZS5wYWdlWTtcclxuICAgIHN0b3BEcmFnKGUsIGxhc3RQb3NYLCBsYXN0UG9zWSk7XHJcbiAgfTtcclxuXHJcbiAgZnVuY3Rpb24gc3RhcnREcmFnKGU6IE1vdXNlRXZlbnQpIHtcclxuICAgIGNvbnN0IHBhcmVudCA9IChlLmN1cnJlbnRUYXJnZXQgYXMgSFRNTEVsZW1lbnQpLnBhcmVudE5vZGUgYXMgSFRNTEVsZW1lbnQ7XHJcblxyXG4gICAgaWYgKHBhcmVudC5jbGFzc05hbWUuaW5kZXhPZihcImRlY2thSG9sZGVyXCIpID4gLTEpIHtcclxuICAgICAgbGV0IGxhc3QgPSBjdXJyZW50R2FtZS5kZWNrYS5wb3AoKTtcclxuICAgICAgY3VycmVudEdhbWUuZGVja2EudW5zaGlmdChsYXN0KTtcclxuICAgICAgcmVuZGVyQm9hcmQoKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGFycmF5T2ZDbGFzc2VzID0gWy4uLihlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xhc3NMaXN0XTtcclxuXHJcbiAgICBpZiAoIWFycmF5T2ZDbGFzc2VzLmluY2x1ZGVzKFwiY2FyZFwiKSkge1xyXG4gICAgICBhY3RpdmVDYXJkcy5wdXNoKChlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkucGFyZW50Tm9kZSk7XHJcbiAgICAgIGxldCBncmFiQWxsQ2FyZHMgPSBhY3RpdmVDYXJkc1swXS5uZXh0RWxlbWVudFNpYmxpbmc7XHJcbiAgICAgIHdoaWxlIChncmFiQWxsQ2FyZHMgIT09IG51bGwpIHtcclxuICAgICAgICBhY3RpdmVDYXJkcy5wdXNoKGdyYWJBbGxDYXJkcyk7XHJcbiAgICAgICAgZ3JhYkFsbENhcmRzID0gZ3JhYkFsbENhcmRzLm5leHRFbGVtZW50U2libGluZztcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICgoZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmNsYXNzTmFtZS5pbmRleE9mKFwiZGVja2FIb2xkZXJcIikgPiAtMSkge1xyXG4gICAgICBpZiAoKGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50KS5uZXh0RWxlbWVudFNpYmxpbmcpIHtcclxuICAgICAgICBjb25zdCBsYXN0ID0gY3VycmVudEdhbWUuZGVja2FbY3VycmVudEdhbWUuZGVja2EubGVuZ3RoIC0gMV07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIG1vdmVEcmFnKGU6IE1vdXNlRXZlbnQsIGxhc3RQb3NYOiBudW1iZXIsIGxhc3RQb3NZOiBudW1iZXIpIHtcclxuICAgIGlmIChhY3RpdmVDYXJkcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGxldCBsZWZ0ID0gbGFzdFBvc1ggLSA1MDtcclxuICAgICAgbGV0IHRvcCA9IGxhc3RQb3NZICsgMTA1O1xyXG4gICAgICBpZiAoYWN0aXZlQ2FyZHNbMF0uY2xhc3NOYW1lLmluZGV4T2YoXCJkZWNrYU9wZW5cIikgPiAtMSkge1xyXG4gICAgICAgIHRvcCA9IGxhc3RQb3NZICsgMjA7XHJcbiAgICAgIH0gZWxzZSBpZiAoYWN0aXZlQ2FyZHNbMF0uY2xhc3NOYW1lLmluZGV4T2YoXCJwbGFjZVwiKSA+IC0xKSB7XHJcbiAgICAgICAgdG9wID0gbGFzdFBvc1kgKyAyO1xyXG4gICAgICB9XHJcbiAgICAgIGxldCB6SW5kZXggPSAyMDtcclxuICAgICAgZm9yIChsZXQgYWN0aXZlID0gMDsgYWN0aXZlIDwgYWN0aXZlQ2FyZHMubGVuZ3RoOyBhY3RpdmUrKykge1xyXG4gICAgICAgIGFjdGl2ZUNhcmRzW2FjdGl2ZV0uc3R5bGUucG9zaXRpb24gPSBcImZpeGVkXCI7XHJcbiAgICAgICAgYWN0aXZlQ2FyZHNbYWN0aXZlXS5zdHlsZS56SW5kZXggPSB6SW5kZXg7XHJcbiAgICAgICAgYWN0aXZlQ2FyZHNbYWN0aXZlXS5zdHlsZS5sZWZ0ID0gbGVmdCArIFwicHhcIjtcclxuICAgICAgICBhY3RpdmVDYXJkc1thY3RpdmVdLnN0eWxlLnRvcCA9IHRvcCArIFwicHhcIjtcclxuICAgICAgICBhY3RpdmVDYXJkc1thY3RpdmVdLnN0eWxlW1wibWFyZ2luLWJvdHRvbVwiXSA9IFwiMFwiO1xyXG4gICAgICAgIHRvcCA9IHRvcCArIDIwO1xyXG4gICAgICAgIHpJbmRleCA9IHpJbmRleCArIDEwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3RvcERyYWcoZTogTW91c2VFdmVudCwgbGFzdFBvc1g6IG51bWJlciwgbGFzdFBvc1k6IG51bWJlcikge1xyXG4gICAgbGV0IGFjY2VwdGVyID0gPEhUTUxFbGVtZW50PihlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdChcImRpdlwiKTtcclxuXHJcbiAgICBpZiAoYWN0aXZlQ2FyZHMubGVuZ3RoID4gMCkge1xyXG4gICAgICBjb25zdCBmcm9tRWwgPSBhY3RpdmVDYXJkc1swXS5vYmoucGFyZW50O1xyXG4gICAgICBjb25zdCBbZnJvbSwgdG9dID0gZ2V0RnJvbVRvKGZyb21FbCwgYWNjZXB0ZXIsIGN1cnJlbnRHYW1lKTtcclxuXHJcbiAgICAgIGlmIChcclxuICAgICAgICBhY2NlcHRlciA9PT0gdW5kZWZpbmVkIHx8XHJcbiAgICAgICAgKGFjY2VwdGVyIGFzIEhUTUxFbGVtZW50KS5jbGFzc05hbWUuaW5kZXhPZihcImJvYXJkXCIpID4gLTEgfHxcclxuICAgICAgICAoYWNjZXB0ZXIgYXMgSFRNTEVsZW1lbnQpLmNsYXNzTmFtZS5pbmRleE9mKFwiZGVja2FUb3BcIikgPiAtMSB8fFxyXG4gICAgICAgIChhY2NlcHRlciBhcyBIVE1MRWxlbWVudCkuY2xhc3NOYW1lLmluZGV4T2YoXCJzdGFja3NcIikgPiAtMSB8fFxyXG4gICAgICAgIChhY2NlcHRlciBhcyBIVE1MRWxlbWVudCkuY2xhc3NOYW1lLmluZGV4T2YoXCJwbGFjZXNcIikgPiAtMSB8fFxyXG4gICAgICAgIChhY2NlcHRlciBhcyBIVE1MRWxlbWVudCkuY2xhc3NOYW1lLmluZGV4T2YoXCJkZWNrYVwiKSA+IC0xIHx8XHJcbiAgICAgICAgYWNjZXB0ZXIuY2xhc3NOYW1lLmluZGV4T2YoZnJvbUVsLmNsYXNzTmFtZSkgPiAtMVxyXG4gICAgICApIHtcclxuICAgICAgICBhY3RpdmVDYXJkcy5mb3JFYWNoKChlbDogYW55KSA9PiB7XHJcbiAgICAgICAgICBlbC5vYmoucmVyZW5kZXIoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBhY3RpdmVDYXJkcyA9IFtdO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGFjY2VwdGVyLmNsYXNzTmFtZS5pbmRleE9mKFwic3RhY2tcIikgPiAtMSkge1xyXG4gICAgICAgIGxldCBhY2NlcHRlZDtcclxuICAgICAgICBpZiAodG8ubGVuZ3RoIDw9IDAgJiYgYWNjZXB0ZXIuY2xhc3NOYW1lLmluZGV4T2YoXCJzdGFja1wiKSA+IC0xKSB7XHJcbiAgICAgICAgICBpZiAoYWN0aXZlQ2FyZHNbMF0ub2JqLndlaWdodCA+PSAxMykge1xyXG4gICAgICAgICAgICBhY2NlcHRlZCA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFjY2VwdGVkID0gYWNjZXB0ZWRTdGFjayhhY3RpdmVDYXJkc1swXS5vYmosIHRvW3RvLmxlbmd0aCAtIDFdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGFjY2VwdGVkKSB7XHJcbiAgICAgICAgICBsZXQgaXRlbXM7XHJcbiAgICAgICAgICBpZiAoZnJvbS5sZW5ndGggPD0gMSkge1xyXG4gICAgICAgICAgICBpdGVtcyA9IFtmcm9tLnBvcCgpXTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGl0ZW1zID0gZnJvbS5zcGxpY2UoZnJvbS5pbmRleE9mKGFjdGl2ZUNhcmRzWzBdLm9iaiksIGZyb20ubGVuZ3RoIC0gMSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB0by5wdXNoKC4uLml0ZW1zKTtcclxuICAgICAgICAgIHJlbmRlckJvYXJkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghYWNjZXB0ZWQpIHtcclxuICAgICAgICAgIGFjdGl2ZUNhcmRzLmZvckVhY2goKGVsOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgZWwub2JqLnJlcmVuZGVyKCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGFjdGl2ZUNhcmRzID0gW107XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoYWNjZXB0ZXIuY2xhc3NOYW1lLmluZGV4T2YoXCJwbGFjZVwiKSA+IC0xKSB7XHJcbiAgICAgICAgbGV0IGFjY2VwdGVkO1xyXG4gICAgICAgIGlmICh0by5sZW5ndGggPD0gMCkge1xyXG4gICAgICAgICAgaWYgKGFjdGl2ZUNhcmRzWzBdLm9iai53ZWlnaHQgPT09IDEpIHtcclxuICAgICAgICAgICAgYWNjZXB0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhY2NlcHRlZCA9IGFjY2VwdGVkUGxhY2UoYWN0aXZlQ2FyZHNbMF0ub2JqLCB0b1t0by5sZW5ndGggLSAxXSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYWNjZXB0ZWQpIHtcclxuICAgICAgICAgIGxldCBpdGVtcztcclxuICAgICAgICAgIGlmIChmcm9tLmxlbmd0aCA8PSAxKSB7XHJcbiAgICAgICAgICAgIGl0ZW1zID0gW2Zyb20ucG9wKCldO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaXRlbXMgPSBmcm9tLnNwbGljZShmcm9tLmluZGV4T2YoYWN0aXZlQ2FyZHNbMF0ub2JqKSwgZnJvbS5sZW5ndGggLSAxKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHRvLnB1c2goLi4uaXRlbXMpO1xyXG4gICAgICAgICAgcmVuZGVyQm9hcmQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFhY2NlcHRlZCkge1xyXG4gICAgICAgICAgYWN0aXZlQ2FyZHMuZm9yRWFjaCgoZWw6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBlbC5vYmoucmVyZW5kZXIoKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgYWN0aXZlQ2FyZHMgPSBbXTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFkZEV2ZW50cztcclxuIiwiaW1wb3J0IHsgQ2FyZEludGVyZmFjZSB9IGZyb20gXCIuLi9jbGFzc2VzL2NhcmRcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhY2NlcHRlZFN0YWNrKGNhcmQxOiBDYXJkSW50ZXJmYWNlLCBjYXJkMjogQ2FyZEludGVyZmFjZSkge1xyXG4gICAgbGV0IHcgPSBmYWxzZTtcclxuICAgIGxldCBjO1xyXG4gIFxyXG4gICAgaWYgKGNhcmQyLndlaWdodCAtIGNhcmQxLndlaWdodCA9PT0gMSkge1xyXG4gICAgICB3ID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIGlmIChjYXJkMS5jb2xvciAhPT0gY2FyZDIuY29sb3IpIHtcclxuICAgICAgYyA9IHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdyAmJiBjO1xyXG4gIH1cclxuICBcclxuIGV4cG9ydCAgZnVuY3Rpb24gYWNjZXB0ZWRQbGFjZShjYXJkMTogQ2FyZEludGVyZmFjZSwgY2FyZDI6IENhcmRJbnRlcmZhY2UpIHtcclxuICAgIGxldCB3ID0gZmFsc2U7XHJcbiAgICBsZXQgYywgcztcclxuICBcclxuICAgIGlmIChjYXJkMS53ZWlnaHQgLSBjYXJkMi53ZWlnaHQgPT09IDEpIHtcclxuICAgICAgdyA9IHRydWU7XHJcbiAgICB9XHJcbiAgICBpZiAoY2FyZDEuY29sb3IgPT09IGNhcmQyLmNvbG9yKSB7XHJcbiAgICAgIGMgPSB0cnVlO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgaWYgKGNhcmQxLnN1aXQgPT09IGNhcmQyLnN1aXQpIHtcclxuICAgICAgcyA9IHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdyAmJiBjICYmIHM7XHJcbiAgfVxyXG4gICIsImZ1bmN0aW9uIGdldEZyb21Ubyhmcm9tRWw6IEhUTUxFbGVtZW50LCB0b0VsOiBIVE1MRWxlbWVudCwgY3VycmVudEdhbWU6IGFueSkge1xyXG4gIGxldCBmcm9tLCB0bztcclxuICBpZiAoZnJvbUVsLmNsYXNzTmFtZS5pbmRleE9mKFwicGxhY2VcIikgPiAtMSkge1xyXG4gICAgZnJvbSA9IGN1cnJlbnRHYW1lLnBsYWNlc1tmcm9tRWwuY2xhc3NOYW1lLnNwbGl0KFwiIFwiKVsxXV07XHJcbiAgfSBlbHNlIGlmIChmcm9tRWwuY2xhc3NOYW1lID09PSBcImRlY2thXCIpIHtcclxuICAgIGZyb20gPSBjdXJyZW50R2FtZS5kZWNrYTtcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc3Qgc3RhY2tObyA9IFwic3RhY2tcIiArIGZyb21FbC5jbGFzc05hbWUuc3BsaXQoXCJcIilbNV07XHJcbiAgICBmcm9tID0gY3VycmVudEdhbWUuc3RhY2tzW3N0YWNrTm9dO1xyXG4gIH1cclxuICBpZiAodG9FbC5jbGFzc05hbWUuaW5kZXhPZihcInBsYWNlXCIpID4gLTEpIHtcclxuICAgIHRvID0gY3VycmVudEdhbWUucGxhY2VzW3RvRWwuY2xhc3NOYW1lLnNwbGl0KFwiIFwiKVsxXV07XHJcbiAgfSBlbHNlIGlmICh0b0VsLmNsYXNzTmFtZSA9PT0gXCJkZWNrYVwiKSB7XHJcbiAgICB0byA9IGN1cnJlbnRHYW1lLmRlY2thO1xyXG4gIH0gZWxzZSBpZiAoXHJcbiAgICB0b0VsLmNsYXNzTmFtZS5pbmRleE9mKFwiY2FyZFwiKSA+IC0xIHx8XHJcbiAgICB0b0VsLmNsYXNzTmFtZS5pbmRleE9mKFwic3VpdEljb25cIikgPiAtMSB8fFxyXG4gICAgdG9FbC5jbGFzc05hbWUuaW5kZXhPZihcInN1aXRXZWlnaHRcIikgPiAtMVxyXG4gICkge1xyXG4gICAgbGV0IGluZGV4ID0gPEhUTUxFbGVtZW50PnRvRWwuY2xvc2VzdChcImRpdlwiKTtcclxuXHJcbiAgICB0byA9IGN1cnJlbnRHYW1lLnN0YWNrc1tpbmRleC5jbGFzc05hbWVdO1xyXG4gIH0gZWxzZSBpZiAodG9FbC5jbGFzc05hbWUuaW5kZXhPZihcImZsaXBwZWRcIikgPiAtMSkge1xyXG4gICAgbGV0IGluZGV4ID0gPEhUTUxFbGVtZW50PnRvRWwucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudDtcclxuICAgIHRvID0gY3VycmVudEdhbWUuc3RhY2tzW2luZGV4LmNsYXNzTmFtZV07XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnN0IHN0YWNrTm8gPSBcInN0YWNrXCIgKyB0b0VsLmNsYXNzTmFtZS5zcGxpdChcIlwiKVs1XTtcclxuICAgIHRvID0gY3VycmVudEdhbWUuc3RhY2tzW3N0YWNrTm9dO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIFtmcm9tLCB0b107XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGdldEZyb21UbztcclxuIiwiaW1wb3J0IHsgQ2FyZEludGVyZmFjZSB9IGZyb20gXCIuLi9jbGFzc2VzL2NhcmRcIjtcclxuXHJcbmZ1bmN0aW9uIHNodWZmbGUoY2FyZHM6IENhcmRJbnRlcmZhY2VbXSkge1xyXG4gIGZvciAobGV0IGkgPSBjYXJkcy5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XHJcbiAgICBjb25zdCBqID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7XHJcbiAgICBbY2FyZHNbaV0sIGNhcmRzW2pdXSA9IFtjYXJkc1tqXSwgY2FyZHNbaV1dO1xyXG4gIH1cclxuICByZXR1cm4gY2FyZHM7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHNodWZmbGU7XHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImltcG9ydCBDYXJkIGZyb20gXCIuL2NsYXNzZXMvY2FyZFwiO1xyXG5pbXBvcnQgeyBDYXJkSW50ZXJmYWNlIH0gZnJvbSBcIi4vY2xhc3Nlcy9jYXJkXCI7XHJcbmltcG9ydCB7IGdhbWVUeXBlIH0gZnJvbSBcIi4vdHMvZ2FtZVR5cGVcIjtcclxuaW1wb3J0IHNodWZmbGUgZnJvbSBcIi4vbW9kdWxlcy9zaHVmZmxlXCI7XHJcbmltcG9ydCBhZGRFdmVudHMgZnJvbSBcIi4vbW9kdWxlcy9hZGRFdmVudHNcIjtcclxuaW1wb3J0IFwiLi4vbWFpbi5jc3NcIjtcclxuXHJcbmxldCBjYXJkczogQ2FyZEludGVyZmFjZVtdID0gW107XHJcbmNvbnN0IHN1aXRzID0gW1wiaFwiLCBcInNcIiwgXCJjXCIsIFwiZFwiXTtcclxubGV0IGN1cnJlbnRHYW1lOiBnYW1lVHlwZTtcclxubGV0IGludGVydmFsOiBSZXR1cm5UeXBlPHR5cGVvZiBzZXRJbnRlcnZhbD47XHJcbmxldCBzdGFydGVkID0gZmFsc2U7XHJcblxyXG5jb25zdCBuZXdHYW1lID0gKCkgPT4ge1xyXG4gIGNvbnN0IGdhbWU6IGdhbWVUeXBlID0ge1xyXG4gICAgc3RhY2tzOiB7XHJcbiAgICAgIHN0YWNrMTogW10sXHJcbiAgICAgIHN0YWNrMjogW10sXHJcbiAgICAgIHN0YWNrMzogW10sXHJcbiAgICAgIHN0YWNrNDogW10sXHJcbiAgICAgIHN0YWNrNTogW10sXHJcbiAgICAgIHN0YWNrNjogW10sXHJcbiAgICAgIHN0YWNrNzogW10sXHJcbiAgICB9LFxyXG4gICAgZGVja2E6IFtdLFxyXG4gICAgcGxhY2VzOiB7XHJcbiAgICAgIGM6IFtdLFxyXG4gICAgICBkOiBbXSxcclxuICAgICAgaDogW10sXHJcbiAgICAgIHM6IFtdLFxyXG4gICAgfSxcclxuICB9O1xyXG4gIGZvciAobGV0IHMgPSAwOyBzIDwgc3VpdHMubGVuZ3RoOyBzKyspIHtcclxuICAgIGZvciAobGV0IGMgPSAxOyBjIDwgMTQ7IGMrKykge1xyXG4gICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoYywgc3VpdHNbc10sIGMgJSAyICE9PSAwID8gXCJyZWRcIiA6IFwiYmxhY2tcIik7XHJcbiAgICAgIGNhcmRzLnB1c2goY2FyZCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGNvbnN0IG5ld0RlY2thID0gc2h1ZmZsZShjYXJkcyk7XHJcbiAgY2FyZHMgPSBuZXdEZWNrYTtcclxuICBjdXJyZW50R2FtZSA9IGdhbWU7XHJcblxyXG4gIGdhbWUuZGVja2EgPSBuZXdEZWNrYTtcclxuXHJcbiAgbGV0IG1heFN0YWNrID0gMDtcclxuICBsZXQgbmV4dFN0YWNrID0gMjtcclxuICBsZXQgZGVsYXkgPSAxO1xyXG4gIGN1cnJlbnRHYW1lID0gZ2FtZTtcclxuXHJcbiAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmaWxsQm9hcmQsIDEwMCk7XHJcblxyXG4gIGZ1bmN0aW9uIGZpbGxCb2FyZCgpIHtcclxuICAgIGlmIChkZWxheSA9PT0gMjkpIHtcclxuICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBkZWxheSsrO1xyXG4gICAgICBjb25zdCBzb3J0b09iamVjdCA9IGdhbWUuZGVja2FbZ2FtZS5kZWNrYS5sZW5ndGggLSAxXTtcclxuICAgICAgZ2FtZS5kZWNrYS5wb3AoKTtcclxuICAgICAgbWF4U3RhY2srKztcclxuICAgICAgaWYgKG1heFN0YWNrID09PSA4KSB7XHJcbiAgICAgICAgbWF4U3RhY2sgPSBuZXh0U3RhY2s7XHJcbiAgICAgICAgbmV4dFN0YWNrKys7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKG5leHRTdGFjayA8IDkpIHtcclxuICAgICAgICBnYW1lLnN0YWNrc1tcInN0YWNrXCIgKyBtYXhTdGFja10ucHVzaChzb3J0b09iamVjdCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG5uZXdHYW1lKCk7XHJcblxyXG5jb25zdCByZW5kZXJCb2FyZCA9ICgpID0+IHtcclxuICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9IFwiXCI7XHJcbiAgY29uc3QgYm9hcmQgPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJvYXJkKTtcclxuICBib2FyZC5jbGFzc05hbWUgPSBcImJvYXJkXCI7XHJcbiAgYm9hcmQuaWQgPSBcImdhbWVib2FyZFwiO1xyXG5cclxuICBjb25zdCB0b3BTaWRlID0gPEhUTUxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgdG9wU2lkZS5jbGFzc05hbWUgPSBcImRlY2thVG9wXCI7XHJcbiAgYm9hcmQuYXBwZW5kQ2hpbGQodG9wU2lkZSk7XHJcblxyXG4gIChmdW5jdGlvbiByZW5kZXJEZWNrYSgpIHtcclxuICAgIGNvbnN0IGRlY2thID0gPEhUTUxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBkZWNrYS5jbGFzc05hbWUgPSBcImRlY2thXCI7XHJcbiAgICBjb25zdCBkZWNrYUhvbGRlciA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgZGVja2FIb2xkZXIuY2xhc3NOYW1lID0gXCJkZWNrYUhvbGRlclwiO1xyXG4gICAgZGVja2EuYXBwZW5kQ2hpbGQoZGVja2FIb2xkZXIpO1xyXG4gICAgdG9wU2lkZS5hcHBlbmRDaGlsZChkZWNrYSk7XHJcbiAgICBjb25zdCBsYXN0ID0gY3VycmVudEdhbWUuZGVja2FbY3VycmVudEdhbWUuZGVja2EubGVuZ3RoIC0gMV07XHJcbiAgICBmb3IgKGxldCBjYXJkIG9mIGN1cnJlbnRHYW1lLmRlY2thKSB7XHJcbiAgICAgIHJlbmRlckNhcmQoY2FyZCwgZGVja2FIb2xkZXIpO1xyXG4gICAgfVxyXG4gICAgbGFzdC5hZGRDbGFzcyhcImRlY2thT3BlblwiKTtcclxuICAgIHJlbmRlckNhcmQobGFzdCwgZGVja2EpO1xyXG4gICAgbGFzdC5yZW1vdmVDbGFzcyhcImZsaXBwZWRcIik7XHJcbiAgfSkoKTtcclxuXHJcbiAgKGZ1bmN0aW9uIHJlbmRlclBsYWNlcygpIHtcclxuICAgIGNvbnN0IHBsYWNlcyA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgcGxhY2VzLmNsYXNzTmFtZSA9IFwicGxhY2VzXCI7XHJcbiAgICB0b3BTaWRlLmFwcGVuZENoaWxkKHBsYWNlcyk7XHJcbiAgICBsZXQgaW5kZXggPSAxMDtcclxuICAgIGZvciAobGV0IGlkZW50IGluIGN1cnJlbnRHYW1lLnBsYWNlcykge1xyXG4gICAgICBjb25zdCBwbGFjZSA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgICBwbGFjZS5jbGFzc05hbWUgPSBgcGxhY2UgJHtpZGVudH1gO1xyXG4gICAgICBwbGFjZXMuYXBwZW5kQ2hpbGQocGxhY2UpO1xyXG4gICAgICBjb25zdCBjYXJkcyA9IGN1cnJlbnRHYW1lLnBsYWNlc1tpZGVudF07XHJcbiAgICAgIGNhcmRzLmZvckVhY2goKGVsOiBDYXJkSW50ZXJmYWNlKSA9PiB7XHJcbiAgICAgICAgZWwuaXNGbGlwcGVkID0gdHJ1ZTtcclxuICAgICAgICBlbC5yZW1vdmVDbGFzcyhcImRlY2thT3BlblwiKTtcclxuICAgICAgICBlbC5yZW5kZXIocGxhY2UpO1xyXG4gICAgICAgIGNvbnN0IHBhcmVudCA9IDxIVE1MRWxlbWVudD5lbC5wYXJlbnQ7XHJcbiAgICAgICAgcGFyZW50LnN0eWxlLnpJbmRleCA9IGluZGV4ICsgMSArJyc7XHJcbiAgICAgICAgKHBhcmVudCBhcyBhbnkpLnN0eWxlW1wibWFyZ2luLWJvdHRvbVwiXSA9IDA7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0pKCk7XHJcblxyXG4gIChmdW5jdGlvbiByZW5kZXJTdGFja3MoKSB7XHJcbiAgICBjb25zdCBzdGFja3MgPSA8SFRNTEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHN0YWNrcy5jbGFzc05hbWUgPSBcInN0YWNrc1wiO1xyXG4gICAgYm9hcmQuYXBwZW5kQ2hpbGQoc3RhY2tzKTtcclxuXHJcbiAgICBmb3IgKGxldCBzdCBpbiBjdXJyZW50R2FtZS5zdGFja3MpIHtcclxuICAgICAgY29uc3Qgc3RhY2sgPSA8SFRNTEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgc3RhY2suY2xhc3NOYW1lID0gc3Q7XHJcbiAgICAgIHN0YWNrcy5hcHBlbmRDaGlsZChzdGFjayk7XHJcblxyXG4gICAgICBjb25zdCBjYXJkcyA9IGN1cnJlbnRHYW1lLnN0YWNrc1tzdF07XHJcbiAgICAgIGlmIChjYXJkcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgY2FyZHMuZm9yRWFjaCgoZWw6IENhcmRJbnRlcmZhY2UpID0+IHtcclxuICAgICAgICAgIGVsLnJlbmRlcihzdGFjayk7XHJcbiAgICAgICAgICBlbC5yZW1vdmVDbGFzcyhcImRlY2thT3BlblwiKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoc3RhcnRlZCkge1xyXG4gICAgICAgICAgY29uc3QgbGFzdCA9IGNhcmRzW2NhcmRzLmxlbmd0aCAtIDFdO1xyXG4gICAgICAgICAgbGFzdC5pc0ZsaXBwZWQgPSB0cnVlO1xyXG4gICAgICAgICAgbGFzdC5yZW1vdmVDbGFzcyhcImZsaXBwZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoc3RhcnRlZCkge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2FyZFwiKS5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICAgICAgYWRkRXZlbnRzKGVsLCByZW5kZXJCb2FyZCwgY3VycmVudEdhbWUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSkoKTtcclxuXHJcbiAgaWYgKCFzdGFydGVkICYmIGN1cnJlbnRHYW1lLnN0YWNrc1tcInN0YWNrN1wiXS5sZW5ndGggPj0gNykge1xyXG4gICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XHJcbiAgICBzdGFydGVkID0gdHJ1ZTtcclxuICAgIHJlbmRlckJvYXJkKCk7XHJcbiAgfVxyXG59O1xyXG5cclxucmVuZGVyQm9hcmQoKTtcclxuXHJcbmZ1bmN0aW9uIGRlYWxDYXJkcygpIHtcclxuICBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHJlbmRlckJvYXJkKCksIDEwMCk7XHJcbn1cclxuZGVhbENhcmRzKCk7XHJcblxyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGNhcmQ6IENhcmRJbnRlcmZhY2UsIGRlY2thOiBIVE1MRWxlbWVudCkge1xyXG4gIGNhcmQucmVuZGVyKGRlY2thKTtcclxufVxyXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwib3B0aW9ucyIsInN0eWxlVGFnVHJhbnNmb3JtIiwic2V0QXR0cmlidXRlcyIsImluc2VydCIsImRvbUFQSSIsImluc2VydFN0eWxlRWxlbWVudCIsImxvY2FscyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJjb25zdHJ1Y3RvciIsIm51bSIsInN1aXQiLCJjb2xvciIsImlzRmxpcHBlZCIsIm51bWIiLCJjbGFzc05hbWUiLCJ3ZWlnaHQiLCJnZXRXZWlnaHQiLCJnZXRDb2xvciIsInJlbmRlciIsImJvYXJkIiwiY2FyZCIsImNsYXNzTGlzdCIsImFkZCIsInN1aXRJY29uIiwiaW5uZXJIVE1MIiwiZ2V0U3VpdEljb24iLCJkaXNwbGF5cyIsImdldFN1aXQiLCJzZWNvbmRTdWl0SWNvbiIsImNsb25lTm9kZSIsInBhcmVudCIsInJlcmVuZGVyIiwiZ2V0Q2xhc3MiLCJhcmciLCJhcmd1bWVudHMiLCJmb3JFYWNoIiwiZWwiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiY29uc29sZSIsIndhcm4iLCJkIiwiYyIsImgiLCJzIiwibG9nIiwiYWN0aXZlQ2FyZHMiLCJyZW5kZXJCb2FyZCIsImN1cnJlbnRHYW1lIiwib25tb3VzZWRvd24iLCJkb2N1bWVudEVsZW1lbnQiLCJjdXJzb3IiLCJpbmRleE9mIiwiY3VycmVudFRhcmdldCIsImxhc3QiLCJkZWNrYSIsInBvcCIsInVuc2hpZnQiLCJpbmNsdWRlcyIsIm5leHRFbGVtZW50U2libGluZyIsImdyYWJBbGxDYXJkcyIsInN0YXJ0RHJhZyIsIm9ubW91c2Vtb3ZlIiwibGFzdFBvc1giLCJsYXN0UG9zWSIsImxlZnQiLCJ0b3AiLCJ6SW5kZXgiLCJhY3RpdmUiLCJwb3NpdGlvbiIsIm1vdmVEcmFnIiwiY2xpZW50WCIsImNsaWVudFkiLCJvbm1vdXNldXAiLCJwYWdlWCIsInBhZ2VZIiwiYWNjZXB0ZXIiLCJjbG9zZXN0IiwiZnJvbUVsIiwiZnJvbSIsInRvIiwiYWNjZXB0ZWQiLCJhY2NlcHRlZFN0YWNrIiwiaXRlbXMiLCJhY2NlcHRlZFBsYWNlIiwic3RvcERyYWciLCJjYXJkMSIsImNhcmQyIiwidyIsInRvRWwiLCJwbGFjZXMiLCJzcGxpdCIsInN0YWNrTm8iLCJzdGFja3MiLCJwYXJlbnRFbGVtZW50IiwiY2FyZHMiLCJqIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwibmMiLCJzdWl0cyIsImludGVydmFsIiwic3RhcnRlZCIsImdhbWUiLCJzdGFjazEiLCJzdGFjazIiLCJzdGFjazMiLCJzdGFjazQiLCJzdGFjazUiLCJzdGFjazYiLCJzdGFjazciLCJuZXdEZWNrYSIsIm1heFN0YWNrIiwibmV4dFN0YWNrIiwiZGVsYXkiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJzb3J0b09iamVjdCIsIm5ld0dhbWUiLCJib2R5IiwidG9wU2lkZSIsImRlY2thSG9sZGVyIiwicmVuZGVyQ2FyZCIsImlkZW50IiwicGxhY2UiLCJzdCIsInN0YWNrIiwicXVlcnlTZWxlY3RvckFsbCJdLCJzb3VyY2VSb290IjoiIn0=